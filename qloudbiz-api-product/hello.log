2018-11-29 09:43:14,309 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:43:14,341 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:43:35,431 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 31 of 180M
2018-11-29 09:43:35,462 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:43:35,462 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:43:36,226 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '2ac32142-a544-4e08-add7-64cf1871093c': getConnection()...
2018-11-29 09:43:36,226 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2ac32142-a544-4e08-add7-64cf1871093c': init...
2018-11-29 09:43:36,226 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2ac32142-a544-4e08-add7-64cf1871093c': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=2ac32142-a544-4e08-add7-64cf1871093c, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:43:57,270 com.atomikos.jdbc.AtomikosXAConnectionFactory [main] (Slf4jLogger.java:40) WARN  --> XAConnectionFactory: failed to create pooled connection - DBMS down or unreachable?
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:290)
	at org.mariadb.jdbc.MariaDbDataSource.getXAConnection(MariaDbDataSource.java:474)
	at com.atomikos.jdbc.AtomikosXAConnectionFactory.createPooledConnection(AtomikosXAConnectionFactory.java:43)
	at com.atomikos.datasource.pool.ConnectionPool.createPooledConnection(ConnectionPool.java:98)
	at com.atomikos.datasource.pool.ConnectionPool.addConnectionsIfMinPoolSizeNotReached(ConnectionPool.java:86)
	at com.atomikos.datasource.pool.ConnectionPool.init(ConnectionPool.java:60)
	at com.atomikos.datasource.pool.ConnectionPool.<init>(ConnectionPool.java:49)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.<init>(ConnectionPoolWithConcurrentValidation.java:23)
	at com.atomikos.jdbc.AbstractDataSourceBean.init(AbstractDataSourceBean.java:294)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:343)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:117)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQueryList(BaseDaoTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:288)
	... 38 more
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:503)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 41 more
2018-11-29 09:44:18,322 com.atomikos.jdbc.AtomikosXAConnectionFactory [main] (Slf4jLogger.java:40) WARN  --> XAConnectionFactory: failed to create pooled connection - DBMS down or unreachable?
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:290)
	at org.mariadb.jdbc.MariaDbDataSource.getXAConnection(MariaDbDataSource.java:474)
	at com.atomikos.jdbc.AtomikosXAConnectionFactory.createPooledConnection(AtomikosXAConnectionFactory.java:43)
	at com.atomikos.datasource.pool.ConnectionPool.createPooledConnection(ConnectionPool.java:98)
	at com.atomikos.datasource.pool.ConnectionPool.addConnectionsIfMinPoolSizeNotReached(ConnectionPool.java:86)
	at com.atomikos.datasource.pool.ConnectionPool.init(ConnectionPool.java:60)
	at com.atomikos.datasource.pool.ConnectionPool.<init>(ConnectionPool.java:49)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.<init>(ConnectionPoolWithConcurrentValidation.java:23)
	at com.atomikos.jdbc.AbstractDataSourceBean.init(AbstractDataSourceBean.java:294)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:343)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:117)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQueryList(BaseDaoTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:288)
	... 38 more
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:503)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 41 more
2018-11-29 09:44:39,328 com.atomikos.jdbc.AtomikosXAConnectionFactory [main] (Slf4jLogger.java:40) WARN  --> XAConnectionFactory: failed to create pooled connection - DBMS down or unreachable?
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:290)
	at org.mariadb.jdbc.MariaDbDataSource.getXAConnection(MariaDbDataSource.java:474)
	at com.atomikos.jdbc.AtomikosXAConnectionFactory.createPooledConnection(AtomikosXAConnectionFactory.java:43)
	at com.atomikos.datasource.pool.ConnectionPool.createPooledConnection(ConnectionPool.java:98)
	at com.atomikos.datasource.pool.ConnectionPool.addConnectionsIfMinPoolSizeNotReached(ConnectionPool.java:86)
	at com.atomikos.datasource.pool.ConnectionPool.init(ConnectionPool.java:60)
	at com.atomikos.datasource.pool.ConnectionPool.<init>(ConnectionPool.java:49)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.<init>(ConnectionPoolWithConcurrentValidation.java:23)
	at com.atomikos.jdbc.AbstractDataSourceBean.init(AbstractDataSourceBean.java:294)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:343)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:117)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQueryList(BaseDaoTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=192.168.11.130)(port=3306)(type=master) : Connection timed out: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:95)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1203)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:560)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:174)
	at org.mariadb.jdbc.MariaDbDataSource.getConnection(MariaDbDataSource.java:288)
	... 38 more
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connect(AbstractConnectProtocol.java:503)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1195)
	... 41 more
2018-11-29 09:44:40,314 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,314 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: calling toString...
2018-11-29 09:44:40,314 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,316 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,317 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 09:44:40,379 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,379 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: calling getAutoCommit...
2018-11-29 09:44:40,380 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: isClosed()...
2018-11-29 09:44:40,380 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,380 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: calling getAutoCommit...
2018-11-29 09:44:40,381 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: WARNING: transaction manager not running?
2018-11-29 09:44:40,381 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@4148db48: close()...
2018-11-29 09:45:17,712 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:45:17,717 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:45:17,754 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:45:17,863 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:45:17,864 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:45:17,885 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:45:17,886 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:45:17,892 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:45:17,896 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:45:17,897 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:45:17,897 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:45:17,898 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:45:17,900 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:45:17,901 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:45:17,902 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:45:17,902 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:45:17,904 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:45:17,908 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:45:17,913 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:45:17,926 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:45:17,936 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:45:17,942 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:45:17,943 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:45:17,948 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:45:17,950 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:45:17,959 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:45:17,960 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:45:17,967 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:45:17,968 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:45:17,973 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:45:17,975 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:45:18,004 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:45:18,014 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:45:18,014 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:45:18,030 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.102s)
2018-11-29 09:45:18,033 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:45:18,045 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:45:18,046 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:45:18,049 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:45:18,069 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:45:18,071 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:45:18,523 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '2ace33a1-aee4-4c21-819e-8bdb9972180c': getConnection()...
2018-11-29 09:45:18,523 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2ace33a1-aee4-4c21-819e-8bdb9972180c': init...
2018-11-29 09:45:18,523 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2ace33a1-aee4-4c21-819e-8bdb9972180c': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=2ace33a1-aee4-4c21-819e-8bdb9972180c, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:45:18,603 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:45:18,604 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:45:18,604 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:45:18,604 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:45:18,604 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST4(?,?,?)})...
2018-11-29 09:45:18,659 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:45:18,659 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:45:18,659 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:45:18,660 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:45:18,660 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:47:09,702 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:47:09,707 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:47:09,738 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:47:09,858 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:47:09,858 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:47:09,879 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:47:09,880 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:47:09,884 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:47:09,889 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:47:09,889 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:47:09,890 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:47:09,891 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:47:09,893 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:47:09,893 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:47:09,895 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:47:09,895 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:47:09,897 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:47:09,901 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:47:09,906 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:47:09,920 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:47:09,932 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:47:09,938 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:47:09,940 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:47:09,943 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:47:09,944 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:47:09,956 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:47:09,957 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:47:09,963 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:47:09,964 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:47:09,967 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:47:09,968 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:47:09,994 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:47:10,000 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:47:10,001 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:47:10,023 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.099s)
2018-11-29 09:47:10,028 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:47:10,042 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:47:10,044 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:47:10,048 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:47:10,083 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:47:10,083 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:47:10,535 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'b2c42875-b818-445e-9d71-4a0956e66f04': getConnection()...
2018-11-29 09:47:10,536 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'b2c42875-b818-445e-9d71-4a0956e66f04': init...
2018-11-29 09:47:10,536 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'b2c42875-b818-445e-9d71-4a0956e66f04': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=b2c42875-b818-445e-9d71-4a0956e66f04, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:47:10,624 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:10,625 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:47:10,625 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:10,625 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:10,625 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST4(?,?,?)})...
2018-11-29 09:47:10,653 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:47:10,653 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:10,654 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:47:10,654 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:10,654 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:47:45,287 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:47:45,292 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:47:45,323 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:47:45,437 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:47:45,437 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:47:45,457 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:47:45,458 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:47:45,463 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:47:45,467 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:47:45,467 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:47:45,468 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:47:45,469 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:47:45,472 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:47:45,472 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:47:45,474 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:47:45,474 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:47:45,476 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:47:45,480 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:47:45,485 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:47:45,498 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:47:45,506 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:47:45,511 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:47:45,513 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:47:45,517 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:47:45,519 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:47:45,529 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:47:45,531 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:47:45,535 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:47:45,536 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:47:45,541 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:47:45,543 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:47:45,546 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:47:45,554 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:47:45,555 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:47:45,580 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.080s)
2018-11-29 09:47:45,583 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:47:45,597 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:47:45,598 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:47:45,602 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:47:45,620 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:47:45,621 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:47:46,103 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'cfdc37d1-389a-4d19-8956-69b1b5fbf879': getConnection()...
2018-11-29 09:47:46,104 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'cfdc37d1-389a-4d19-8956-69b1b5fbf879': init...
2018-11-29 09:47:46,104 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'cfdc37d1-389a-4d19-8956-69b1b5fbf879': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=cfdc37d1-389a-4d19-8956-69b1b5fbf879, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:47:46,195 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,196 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:47:46,196 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,196 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,196 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST4(?,?,?)})...
2018-11-29 09:47:46,217 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:47:46,218 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,218 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:47:46,218 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,218 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:47:46,221 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'cfdc37d1-389a-4d19-8956-69b1b5fbf879': getConnection()...
2018-11-29 09:47:46,221 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'cfdc37d1-389a-4d19-8956-69b1b5fbf879': init...
2018-11-29 09:47:46,222 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,223 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:47:46,223 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,223 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,223 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST4(?,?,?)})...
2018-11-29 09:47:46,225 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:47:46,226 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,226 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:47:46,226 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:47:46,226 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:53:38,665 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:53:38,670 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:53:38,700 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:53:38,813 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:53:38,813 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:53:38,833 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:53:38,833 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:53:38,838 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:53:38,842 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:53:38,842 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:53:38,843 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:53:38,844 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:53:38,847 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:53:38,848 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:53:38,849 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:53:38,850 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:53:38,851 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:53:38,856 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:53:38,863 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:53:38,875 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:53:38,884 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:53:38,892 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:53:38,894 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:53:38,896 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:53:38,898 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:53:38,905 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:53:38,906 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:53:38,910 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:53:38,912 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:53:38,916 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:53:38,918 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:53:38,927 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:53:38,933 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:53:38,933 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:53:38,954 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.077s)
2018-11-29 09:53:38,957 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:53:38,971 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:53:38,972 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:53:38,976 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:53:39,001 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:53:39,002 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:53:39,455 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '5e996df9-832b-44c3-809a-a669c8365c53': getConnection()...
2018-11-29 09:53:39,455 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '5e996df9-832b-44c3-809a-a669c8365c53': init...
2018-11-29 09:53:39,456 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '5e996df9-832b-44c3-809a-a669c8365c53': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=5e996df9-832b-44c3-809a-a669c8365c53, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:53:39,539 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,540 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:53:39,540 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,541 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,541 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 09:53:39,558 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,558 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:53:39,559 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:53:39,559 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,559 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:53:39,559 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:53:39,560 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:55:50,687 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:55:50,692 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:55:50,720 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:55:50,829 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:55:50,829 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:55:50,849 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:55:50,850 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:55:50,855 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:55:50,859 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:55:50,859 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:55:50,860 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:55:50,861 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:55:50,863 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:55:50,864 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:55:50,865 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:55:50,866 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:55:50,868 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:55:50,874 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:55:50,879 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:55:50,889 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:55:50,898 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:55:50,904 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:55:50,906 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:55:50,909 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:55:50,911 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:55:50,922 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:55:50,923 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:55:50,928 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:55:50,929 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:55:50,934 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:55:50,936 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:55:50,942 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:55:50,952 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:55:50,952 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:55:50,974 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.082s)
2018-11-29 09:55:50,977 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:55:50,990 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:55:50,991 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:55:50,994 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:55:51,010 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:55:51,011 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:55:51,459 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '0e8663d3-bd54-4ff7-a19f-792bfc1d4457': getConnection()...
2018-11-29 09:55:51,459 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '0e8663d3-bd54-4ff7-a19f-792bfc1d4457': init...
2018-11-29 09:55:51,459 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '0e8663d3-bd54-4ff7-a19f-792bfc1d4457': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=0e8663d3-bd54-4ff7-a19f-792bfc1d4457, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:55:51,537 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:55:51,537 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:55:51,537 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:55:51,537 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:55:51,538 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 09:55:51,555 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:55:51,556 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:55:51,556 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:55:51,556 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:55:51,556 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:57:43,085 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:57:43,091 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:57:43,121 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:57:43,240 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:57:43,240 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:57:43,261 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:57:43,262 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:57:43,266 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:57:43,270 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:57:43,271 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 09:57:43,272 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:57:43,272 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:57:43,275 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:57:43,276 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:57:43,277 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:57:43,277 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:57:43,279 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:57:43,283 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:57:43,288 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:57:43,299 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:57:43,308 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:57:43,316 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:57:43,319 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:57:43,324 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:57:43,328 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:57:43,337 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:57:43,342 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:57:43,349 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:57:43,350 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:57:43,359 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:57:43,364 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:57:43,369 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:57:43,375 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:57:43,375 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:57:43,390 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.088s)
2018-11-29 09:57:43,394 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:57:43,402 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:57:43,402 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:57:43,406 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 09:57:43,424 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:57:43,425 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:57:43,895 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'c073ace1-9f67-4e13-a2af-b4d36df7385b': getConnection()...
2018-11-29 09:57:43,896 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'c073ace1-9f67-4e13-a2af-b4d36df7385b': init...
2018-11-29 09:57:43,896 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'c073ace1-9f67-4e13-a2af-b4d36df7385b': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=c073ace1-9f67-4e13-a2af-b4d36df7385b, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:57:43,983 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:43,983 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling toString...
2018-11-29 09:57:43,984 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:43,984 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:43,984 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 09:57:44,003 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:44,003 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:57:44,004 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: isClosed()...
2018-11-29 09:57:44,004 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:44,004 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: calling getAutoCommit...
2018-11-29 09:57:44,005 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: WARNING: transaction manager not running?
2018-11-29 09:57:44,005 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@568bf312: close()...
2018-11-29 09:58:37,564 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 09:58:37,569 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:58:37,603 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 09:58:37,737 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 09:58:37,737 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 09:58:37,762 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 09:58:37,763 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 09:58:37,768 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 09:58:37,772 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 09:58:37,773 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-11-29 09:58:37,774 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 09:58:37,774 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 09:58:37,777 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 09:58:37,778 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 09:58:37,779 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 09:58:37,779 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 09:58:37,781 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 09:58:37,786 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 09:58:37,795 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 09:58:37,809 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 09:58:37,820 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 09:58:37,829 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 09:58:37,830 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 09:58:37,833 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 09:58:37,835 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 09:58:37,844 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 09:58:37,845 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 09:58:37,849 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 09:58:37,851 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 09:58:37,854 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 09:58:37,862 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 09:58:37,867 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 09:58:37,870 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 09:58:37,870 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 09:58:37,893 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.082s)
2018-11-29 09:58:37,897 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 09:58:37,910 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 09:58:37,911 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 09:58:37,918 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 42 of 180M
2018-11-29 09:58:48,549 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 09:58:48,559 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 09:58:49,767 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '2acdb62f-fd97-4b41-ab90-426448f29cc6': getConnection()...
2018-11-29 09:58:49,767 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2acdb62f-fd97-4b41-ab90-426448f29cc6': init...
2018-11-29 09:58:49,768 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2acdb62f-fd97-4b41-ab90-426448f29cc6': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=2acdb62f-fd97-4b41-ab90-426448f29cc6, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 09:58:50,108 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:58:50,109 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: calling toString...
2018-11-29 09:58:52,715 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:58:52,716 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:58:52,717 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 09:59:07,748 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:59:07,749 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: calling getAutoCommit...
2018-11-29 09:59:10,674 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: isClosed()...
2018-11-29 09:59:10,676 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:59:10,677 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: calling getAutoCommit...
2018-11-29 09:59:12,131 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: WARNING: transaction manager not running?
2018-11-29 09:59:12,132 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@2462cb01: close()...
2018-11-29 10:19:30,230 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '2acdb62f-fd97-4b41-ab90-426448f29cc6': getConnection()...
2018-11-29 10:19:30,231 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2acdb62f-fd97-4b41-ab90-426448f29cc6': init...
2018-11-29 10:19:30,241 com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation [main] (Slf4jLogger.java:45) DEBUG --> atomikos connection pool '2acdb62f-fd97-4b41-ab90-426448f29cc6': error creating proxy of connection an AtomikosXAPooledConnection with a SessionHandleState with 0 context(s)
com.atomikos.datasource.pool.CreateConnectionException: Error executing testQuery
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:108)
	at com.atomikos.datasource.pool.AbstractXPooledConnection.createConnectionProxy(AbstractXPooledConnection.java:55)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.concurrentlyTryToUse(ConnectionPoolWithConcurrentValidation.java:59)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.retrieveFirstAvailableConnection(ConnectionPoolWithConcurrentValidation.java:41)
	at com.atomikos.datasource.pool.ConnectionPool.retrieveFirstAvailableConnectionAndGrowPoolIfNecessary(ConnectionPool.java:153)
	at com.atomikos.datasource.pool.ConnectionPool.findOrWaitForAnAvailableConnection(ConnectionPool.java:141)
	at com.atomikos.datasource.pool.ConnectionPool.borrowConnection(ConnectionPool.java:132)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:346)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:188)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:62)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQuerySingle(BaseDaoTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: (conn=82) Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:238)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:232)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159)
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:104)
	... 37 more
Caused by: java.sql.SQLException: Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.handleIoException(AbstractQueryProtocol.java:1888)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:282)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223)
	... 39 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.mariadb.jdbc.internal.io.output.StandardPacketOutputStream.flushBuffer(StandardPacketOutputStream.java:110)
	at org.mariadb.jdbc.internal.io.output.AbstractPacketOutputStream.flush(AbstractPacketOutputStream.java:185)
	at org.mariadb.jdbc.internal.com.send.ComQuery.sendDirect(ComQuery.java:298)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:268)
	... 40 more
2018-11-29 10:19:30,261 com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation [main] (Slf4jLogger.java:45) DEBUG --> atomikos connection pool '2acdb62f-fd97-4b41-ab90-426448f29cc6': error creating proxy of connection an AtomikosXAPooledConnection with a SessionHandleState with 0 context(s)
com.atomikos.datasource.pool.CreateConnectionException: Error executing testQuery
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:108)
	at com.atomikos.datasource.pool.AbstractXPooledConnection.createConnectionProxy(AbstractXPooledConnection.java:55)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.concurrentlyTryToUse(ConnectionPoolWithConcurrentValidation.java:59)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.retrieveFirstAvailableConnection(ConnectionPoolWithConcurrentValidation.java:41)
	at com.atomikos.datasource.pool.ConnectionPool.retrieveFirstAvailableConnectionAndGrowPoolIfNecessary(ConnectionPool.java:156)
	at com.atomikos.datasource.pool.ConnectionPool.findOrWaitForAnAvailableConnection(ConnectionPool.java:141)
	at com.atomikos.datasource.pool.ConnectionPool.borrowConnection(ConnectionPool.java:132)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:346)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:188)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:62)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQuerySingle(BaseDaoTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: (conn=83) Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:238)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:232)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159)
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:104)
	... 37 more
Caused by: java.sql.SQLException: Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.handleIoException(AbstractQueryProtocol.java:1888)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:282)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223)
	... 39 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.mariadb.jdbc.internal.io.output.StandardPacketOutputStream.flushBuffer(StandardPacketOutputStream.java:110)
	at org.mariadb.jdbc.internal.io.output.AbstractPacketOutputStream.flush(AbstractPacketOutputStream.java:185)
	at org.mariadb.jdbc.internal.com.send.ComQuery.sendDirect(ComQuery.java:298)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:268)
	... 40 more
2018-11-29 10:19:30,268 com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation [main] (Slf4jLogger.java:45) DEBUG --> atomikos connection pool '2acdb62f-fd97-4b41-ab90-426448f29cc6': error creating proxy of connection an AtomikosXAPooledConnection with a SessionHandleState with 0 context(s)
com.atomikos.datasource.pool.CreateConnectionException: Error executing testQuery
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:108)
	at com.atomikos.datasource.pool.AbstractXPooledConnection.createConnectionProxy(AbstractXPooledConnection.java:55)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.concurrentlyTryToUse(ConnectionPoolWithConcurrentValidation.java:59)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.retrieveFirstAvailableConnection(ConnectionPoolWithConcurrentValidation.java:41)
	at com.atomikos.datasource.pool.ConnectionPool.retrieveFirstAvailableConnectionAndGrowPoolIfNecessary(ConnectionPool.java:153)
	at com.atomikos.datasource.pool.ConnectionPool.findOrWaitForAnAvailableConnection(ConnectionPool.java:141)
	at com.atomikos.datasource.pool.ConnectionPool.borrowConnection(ConnectionPool.java:132)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:346)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:188)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:62)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQuerySingle(BaseDaoTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: (conn=84) Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:238)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:232)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159)
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:104)
	... 37 more
Caused by: java.sql.SQLException: Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.handleIoException(AbstractQueryProtocol.java:1888)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:282)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223)
	... 39 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.mariadb.jdbc.internal.io.output.StandardPacketOutputStream.flushBuffer(StandardPacketOutputStream.java:110)
	at org.mariadb.jdbc.internal.io.output.AbstractPacketOutputStream.flush(AbstractPacketOutputStream.java:185)
	at org.mariadb.jdbc.internal.com.send.ComQuery.sendDirect(ComQuery.java:298)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:268)
	... 40 more
2018-11-29 10:19:30,287 com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation [main] (Slf4jLogger.java:45) DEBUG --> atomikos connection pool '2acdb62f-fd97-4b41-ab90-426448f29cc6': error creating proxy of connection an AtomikosXAPooledConnection with a SessionHandleState with 0 context(s)
com.atomikos.datasource.pool.CreateConnectionException: Error executing testQuery
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:108)
	at com.atomikos.datasource.pool.AbstractXPooledConnection.createConnectionProxy(AbstractXPooledConnection.java:55)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.concurrentlyTryToUse(ConnectionPoolWithConcurrentValidation.java:59)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.retrieveFirstAvailableConnection(ConnectionPoolWithConcurrentValidation.java:41)
	at com.atomikos.datasource.pool.ConnectionPool.retrieveFirstAvailableConnectionAndGrowPoolIfNecessary(ConnectionPool.java:156)
	at com.atomikos.datasource.pool.ConnectionPool.findOrWaitForAnAvailableConnection(ConnectionPool.java:141)
	at com.atomikos.datasource.pool.ConnectionPool.borrowConnection(ConnectionPool.java:132)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:346)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:188)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:62)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQuerySingle(BaseDaoTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: (conn=85) Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:238)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:232)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159)
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:104)
	... 37 more
Caused by: java.sql.SQLException: Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.handleIoException(AbstractQueryProtocol.java:1888)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:282)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223)
	... 39 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.mariadb.jdbc.internal.io.output.StandardPacketOutputStream.flushBuffer(StandardPacketOutputStream.java:110)
	at org.mariadb.jdbc.internal.io.output.AbstractPacketOutputStream.flush(AbstractPacketOutputStream.java:185)
	at org.mariadb.jdbc.internal.com.send.ComQuery.sendDirect(ComQuery.java:298)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:268)
	... 40 more
2018-11-29 10:19:30,291 com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation [main] (Slf4jLogger.java:45) DEBUG --> atomikos connection pool '2acdb62f-fd97-4b41-ab90-426448f29cc6': error creating proxy of connection an AtomikosXAPooledConnection with a SessionHandleState with 0 context(s)
com.atomikos.datasource.pool.CreateConnectionException: Error executing testQuery
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:108)
	at com.atomikos.datasource.pool.AbstractXPooledConnection.createConnectionProxy(AbstractXPooledConnection.java:55)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.concurrentlyTryToUse(ConnectionPoolWithConcurrentValidation.java:59)
	at com.atomikos.datasource.pool.ConnectionPoolWithConcurrentValidation.retrieveFirstAvailableConnection(ConnectionPoolWithConcurrentValidation.java:41)
	at com.atomikos.datasource.pool.ConnectionPool.retrieveFirstAvailableConnectionAndGrowPoolIfNecessary(ConnectionPool.java:153)
	at com.atomikos.datasource.pool.ConnectionPool.findOrWaitForAnAvailableConnection(ConnectionPool.java:141)
	at com.atomikos.datasource.pool.ConnectionPool.borrowConnection(ConnectionPool.java:132)
	at com.atomikos.jdbc.AbstractDataSourceBean.getConnection(AbstractDataSourceBean.java:346)
	at com.qloudfin.sagas.persistence.jdbc.JdbcClient.poolConnect(JdbcClient.java:162)
	at com.qloudbiz.core.utils.ConnectionUtils.getConnection(ConnectionUtils.java:43)
	at com.qloudbiz.core.dao.BaseDao.callProcQueryList(BaseDao.java:238)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:188)
	at com.qloudbiz.core.dao.BaseDao.callProcQuerySingle(BaseDao.java:62)
	at com.csft.product.dao.test.BaseDaoTest.testCallProcQuerySingle(BaseDaoTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: java.sql.SQLNonTransientConnectionException: (conn=86) Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:234)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.getException(ExceptionMapper.java:165)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:238)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:232)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.execute(MariaDbPreparedStatementClient.java:159)
	at com.atomikos.jdbc.AtomikosXAPooledConnection.testUnderlyingConnection(AtomikosXAPooledConnection.java:104)
	... 37 more
Caused by: java.sql.SQLException: Connection reset by peer: socket write error
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.handleIoException(AbstractQueryProtocol.java:1888)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:282)
	at org.mariadb.jdbc.MariaDbPreparedStatementClient.executeInternal(MariaDbPreparedStatementClient.java:223)
	... 39 more
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.mariadb.jdbc.internal.io.output.StandardPacketOutputStream.flushBuffer(StandardPacketOutputStream.java:110)
	at org.mariadb.jdbc.internal.io.output.AbstractPacketOutputStream.flush(AbstractPacketOutputStream.java:185)
	at org.mariadb.jdbc.internal.com.send.ComQuery.sendDirect(ComQuery.java:298)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:268)
	... 40 more
2018-11-29 10:19:30,356 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: WARNING: transaction manager not running?
2018-11-29 10:19:30,356 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: calling toString...
2018-11-29 10:19:30,357 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: WARNING: transaction manager not running?
2018-11-29 10:19:30,357 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: WARNING: transaction manager not running?
2018-11-29 10:19:30,357 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE_TEST3(?)})...
2018-11-29 10:19:30,365 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: isClosed()...
2018-11-29 10:19:30,365 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: WARNING: transaction manager not running?
2018-11-29 10:19:30,365 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: calling getAutoCommit...
2018-11-29 10:19:30,365 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: WARNING: transaction manager not running?
2018-11-29 10:19:30,366 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@3fa247d1: close()...
2018-11-29 10:54:51,652 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 10:54:51,660 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 10:54:51,703 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 10:54:51,814 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 10:54:51,814 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 10:54:51,834 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 10:54:51,835 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 10:54:51,839 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 10:54:51,843 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 10:54:51,844 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 10:54:51,845 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 10:54:51,845 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 10:54:51,848 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 10:54:51,848 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 10:54:51,849 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 10:54:51,849 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 10:54:51,851 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 10:54:51,856 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 10:54:51,862 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 10:54:51,876 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 10:54:51,887 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 10:54:51,896 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 10:54:51,898 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 10:54:51,901 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 10:54:51,904 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 10:54:51,920 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 10:54:51,921 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 10:54:51,927 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 10:54:51,930 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 10:54:51,943 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 10:54:51,948 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 10:54:51,952 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 10:54:51,955 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 10:54:51,955 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 10:54:51,967 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.089s)
2018-11-29 10:54:51,970 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 10:54:51,982 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 10:54:51,983 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 10:54:51,987 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 10:54:51,993 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:177) DEBUG --> listall startRow = null , pageSize = null
2018-11-29 10:54:51,996 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:190) ERROR --> local sql error, {}
java.lang.NullPointerException
	at com.qloudbiz.product.dao.ProductDao.listall(ProductDao.java:181)
	at com.csft.product.dao.test.ProductDaoTest.testQuerylist(ProductDaoTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2018-11-29 10:54:51,998 com.csft.product.dao.test.ProductDaoTest [main] (ProductDaoTest.java:108) DEBUG --> query list :null
2018-11-29 10:55:27,664 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 10:55:27,680 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 10:55:27,722 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 10:55:27,841 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 10:55:27,841 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 10:55:27,867 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 10:55:27,868 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 10:55:27,873 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 10:55:27,878 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 10:55:27,879 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-11-29 10:55:27,879 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 10:55:27,880 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 10:55:27,883 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 10:55:27,883 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 10:55:27,884 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 10:55:27,885 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 10:55:27,887 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 10:55:27,893 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 10:55:27,901 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 10:55:27,915 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 10:55:27,932 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 10:55:27,944 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 10:55:27,946 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 10:55:27,951 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 10:55:27,953 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 10:55:27,978 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 10:55:27,979 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 10:55:27,985 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 10:55:27,986 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 10:55:28,000 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 10:55:28,003 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 10:55:28,006 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 10:55:28,009 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 10:55:28,009 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 10:55:28,025 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.106s)
2018-11-29 10:55:28,029 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 10:55:28,045 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 10:55:28,046 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 10:55:28,052 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 42 of 180M
2018-11-29 10:55:28,183 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:177) DEBUG --> listall startRow = null , pageSize = null
2018-11-29 10:55:38,685 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:190) ERROR --> local sql error, {}
java.lang.NullPointerException
	at com.qloudbiz.product.dao.ProductDao.listall(ProductDao.java:181)
	at com.csft.product.dao.test.ProductDaoTest.testQuerylist(ProductDaoTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2018-11-29 10:55:38,693 com.csft.product.dao.test.ProductDaoTest [main] (ProductDaoTest.java:108) DEBUG --> query list :null
2018-11-29 10:56:42,224 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 10:56:42,228 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 10:56:42,257 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 10:56:42,388 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 10:56:42,389 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 10:56:42,423 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 10:56:42,424 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 10:56:42,429 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 10:56:42,434 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 10:56:42,435 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 10:56:42,436 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 10:56:42,437 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 10:56:42,441 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 10:56:42,441 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 10:56:42,443 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 10:56:42,444 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 10:56:42,446 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 10:56:42,453 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 10:56:42,459 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 10:56:42,474 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 10:56:42,486 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 10:56:42,492 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 10:56:42,494 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 10:56:42,498 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 10:56:42,500 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 10:56:42,529 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 10:56:42,530 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 10:56:42,539 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 10:56:42,545 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 10:56:42,548 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 10:56:42,550 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 10:56:42,553 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 10:56:42,556 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 10:56:42,556 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 10:56:42,572 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.094s)
2018-11-29 10:56:42,575 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 10:56:42,588 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 10:56:42,590 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 10:56:42,596 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 10:56:42,602 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:177) DEBUG --> listall startRow = null , pageSize = null
2018-11-29 10:56:42,605 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:190) ERROR --> local sql error, {}
java.lang.NullPointerException
	at com.qloudbiz.product.dao.ProductDao.listall(ProductDao.java:181)
	at com.csft.product.dao.test.ProductDaoTest.testQuerylist(ProductDaoTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2018-11-29 10:56:42,609 com.csft.product.dao.test.ProductDaoTest [main] (ProductDaoTest.java:108) DEBUG --> query list :null
2018-11-29 10:56:48,306 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 10:56:48,311 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 10:56:48,348 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 10:56:48,493 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 10:56:48,494 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 10:56:48,529 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 10:56:48,530 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 10:56:48,535 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 10:56:48,541 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 10:56:48,541 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-11-29 10:56:48,542 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 10:56:48,542 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 10:56:48,546 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 10:56:48,546 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 10:56:48,549 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 10:56:48,549 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 10:56:48,552 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 10:56:48,564 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 10:56:48,575 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 10:56:48,594 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 10:56:48,608 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 10:56:48,622 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 10:56:48,624 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 10:56:48,627 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 10:56:48,629 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 10:56:48,637 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 10:56:48,638 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 10:56:48,645 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 10:56:48,646 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 10:56:48,656 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 10:56:48,658 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 10:56:48,676 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 10:56:48,679 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 10:56:48,681 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 10:56:48,701 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.104s)
2018-11-29 10:56:48,705 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 10:56:48,717 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 10:56:48,719 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 10:56:48,725 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 42 of 180M
2018-11-29 10:56:48,833 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:177) DEBUG --> listall startRow = null , pageSize = null
2018-11-29 10:57:28,253 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:190) ERROR --> local sql error, {}
java.lang.NullPointerException
	at com.qloudbiz.product.dao.ProductDao.listall(ProductDao.java:181)
	at com.csft.product.dao.test.ProductDaoTest.testQuerylist(ProductDaoTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2018-11-29 10:57:42,663 com.csft.product.dao.test.ProductDaoTest [main] (ProductDaoTest.java:108) DEBUG --> query list :null
2018-11-29 11:03:51,147 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-11-29 11:03:51,152 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 11:03:51,188 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-11-29 11:03:51,298 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.11.130:3306/productdb (MySQL 10.3)
2018-11-29 11:03:51,299 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-11-29 11:03:51,320 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-11-29 11:03:51,320 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-11-29 11:03:51,324 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-11-29 11:03:51,330 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-11-29 11:03:51,330 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@41cf53f9 ...
2018-11-29 11:03:51,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/Administrator/git/oep-repository/qloudbiz-api-product/target/test-classes/db/migration
2018-11-29 11:03:51,332 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-11-29 11:03:51,335 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\
2018-11-29 11:03:51,335 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\Administrator\git\oep-repository\qloudbiz-api-product\target\test-classes\db\migration (db/migration)
2018-11-29 11:03:51,337 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-11-29 11:03:51,337 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-11-29 11:03:51,339 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-11-29 11:03:51,344 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-11-29 11:03:51,350 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-11-29 11:03:51,364 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-11-29 11:03:51,376 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-11-29 11:03:51,383 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-11-29 11:03:51,385 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-11-29 11:03:51,390 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-11-29 11:03:51,393 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-11-29 11:03:51,402 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-11-29 11:03:51,404 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-11-29 11:03:51,410 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-11-29 11:03:51,417 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-11-29 11:03:51,427 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-11-29 11:03:51,429 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 65: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-11-29 11:03:51,434 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 68: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-11-29 11:03:51,436 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-11-29 11:03:51,436 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-11-29 11:03:51,451 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 2 migrations (execution time 00:00.085s)
2018-11-29 11:03:51,454 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-11-29 11:03:51,469 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.2
2018-11-29 11:03:51,470 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-11-29 11:03:51,475 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 41 of 180M
2018-11-29 11:03:51,482 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:177) DEBUG --> listall startRow = 1 , pageSize = 4
2018-11-29 11:03:51,500 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-11-29 11:03:51,501 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-11-29 11:03:51,985 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'c9449613-6c70-4d00-8aca-541cbc8fba1a': getConnection()...
2018-11-29 11:03:51,985 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'c9449613-6c70-4d00-8aca-541cbc8fba1a': init...
2018-11-29 11:03:51,986 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'c9449613-6c70-4d00-8aca-541cbc8fba1a': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=c9449613-6c70-4d00-8aca-541cbc8fba1a, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.11.130:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-11-29 11:03:52,076 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,076 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling toString...
2018-11-29 11:03:52,077 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,077 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,077 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(?,?,?)})...
2018-11-29 11:03:52,097 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: isClosed()...
2018-11-29 11:03:52,098 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,098 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling getAutoCommit...
2018-11-29 11:03:52,098 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,099 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: close()...
2018-11-29 11:03:52,101 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'c9449613-6c70-4d00-8aca-541cbc8fba1a': getConnection()...
2018-11-29 11:03:52,101 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'c9449613-6c70-4d00-8aca-541cbc8fba1a': init...
2018-11-29 11:03:52,104 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,104 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling toString...
2018-11-29 11:03:52,105 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,105 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,105 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling prepareCall({CALL QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(?,?,?)})...
2018-11-29 11:03:52,107 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: isClosed()...
2018-11-29 11:03:52,107 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,108 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: calling getAutoCommit...
2018-11-29 11:03:52,108 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: WARNING: transaction manager not running?
2018-11-29 11:03:52,108 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@482cd91f: close()...
2018-11-29 11:03:52,145 com.csft.product.dao.test.ProductDaoTest [main] (ProductDaoTest.java:111) DEBUG --> query list :PageResultData [totalNum=11, pagePerNum=4, currentNum=1, totalPage=3, prePage=1, nextPage=2[Product [productId=2, code=Think pad-1244746321, name=ThinkPad ], Product [productId=27bf065ca55c46b5982ff988e030a396, code=Think pad-1244746321, name=ThinkPad -2], Product [productId=3, code=ThinkPad T4201, name=ThinkPad T4034], Product [productId=6304d594878e4402a37591d7d20d46a5, code=Think pad-1244746321, name=ThinkPad 3]]]
2018-11-30 09:45:03,367 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-11-30 09:45:11,682 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-11-30 09:45:43,322 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-11-30 09:46:09,489 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-11-30 09:46:45,030 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:201) DEBUG --> >>>>>>> 
2018-11-30 09:46:47,745 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-11-30 09:47:15,205 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:201) DEBUG --> >>>>>>> 
2018-11-30 09:47:20,617 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:204) DEBUG --> >>>>>>> 
2018-11-30 09:47:28,539 com.qloudbiz.product.dao.ProductDao [main] (ProductDao.java:207) DEBUG --> finally 
2018-12-06 18:27:49,350 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:29:24,212 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:29:24,215 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.11.130","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:29:24,255 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:29:45,330 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 25 of 184M
2018-12-06 18:29:47,624 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:29:47,627 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:29:47,669 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:29:47,802 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.44.5:3306/productdb (MySQL 5.5)
2018-12-06 18:29:47,802 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-12-06 18:29:47,827 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-12-06 18:29:47,828 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-12-06 18:29:47,837 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-12-06 18:29:47,842 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-12-06 18:29:47,843 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-12-06 18:29:47,843 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/LCY/git/oep-project/qloudbiz-api-product/target/classes/db/migration
2018-12-06 18:29:47,844 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-12-06 18:29:47,846 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\
2018-12-06 18:29:47,847 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\db\migration (db/migration)
2018-12-06 18:29:47,850 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-12-06 18:29:47,850 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_4__init_productline_table.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_5__productline_procedures.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_6__productbrand_procedures.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_7__productbrand_table.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_8__init_producttype_table.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_9__producttype_procedures.sql
2018-12-06 18:29:47,852 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-12-06 18:29:47,859 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-12-06 18:29:47,866 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-12-06 18:29:47,883 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-12-06 18:29:47,894 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-12-06 18:29:47,899 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-12-06 18:29:47,901 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-12-06 18:29:47,907 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-12-06 18:29:47,909 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-12-06 18:29:47,916 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-12-06 18:29:47,917 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-12-06 18:29:47,920 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-12-06 18:29:47,921 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE
2018-12-06 18:29:47,923 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE PROCEDURE QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE(
	IN v_productId int
)
lable:BEGIN
	SELECT productId,code,name FROM product where productId=v_productId;
END
2018-12-06 18:29:47,924 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 59: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-12-06 18:29:47,928 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 62: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-12-06 18:29:47,929 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 77: -- update QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-12-06 18:29:47,932 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 80: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-12-06 18:29:47,935 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_4__init_productline_table.sql ...
2018-12-06 18:29:47,940 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 18: -- ----------------------------
-- Table structure for productLine
-- ----------------------------
DROP TABLE IF EXISTS `productLine`
2018-12-06 18:29:47,945 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 22: CREATE TABLE `productLine` (
  `lineId` varchar(50) NOT NULL,
  `lineCode` varchar(50) NOT NULL,
  `lineName` varchar(100) NOT NULL,
  `parentId` varchar(50) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL,
  `creatorName` varchar(50) NOT NULL,
  `modifyTime` timestamp NULL DEFAULT NULL,
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT NULL,
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lineId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC
2018-12-06 18:29:47,947 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_5__productline_procedures.sql ...
2018-12-06 18:29:47,948 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`
2018-12-06 18:29:47,949 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`(
	 IN v_lineId varchar(50)
)
lable:BEGIN
   	DELETE FROM productLine WHERE lineId=v_lineId;
END

2018-12-06 18:29:47,950 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 15: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`
2018-12-06 18:29:47,951 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 20: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`(
	IN v_lineId varchar(50)
)
lable:BEGIN
	SELECT * FROM productLine WHERE lineId = v_lineId;
END

2018-12-06 18:29:47,952 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 29: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`
2018-12-06 18:29:47,956 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`(
	 IN v_lineId varchar(50),
     IN v_lineCode varchar(50), 
     IN v_lineName varchar(100),
     IN v_parentId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productLine 
    (
     lineId, 
     lineCode,
     lineName,
     parentId,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	 v_lineId, 
     v_lineCode,
     v_lineName,
     v_parentId,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
	

END

2018-12-06 18:29:47,957 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`
2018-12-06 18:29:47,960 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 102: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_lineCode varchar(50),
	IN v_lineName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50)
)
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) 
	FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId);
	ELSE
	SELECT * FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:29:47,962 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`
2018-12-06 18:29:47,963 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 135: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`(
  IN v_lineId varchar(50),
	IN v_lineName varchar(100),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productLine set 
	lineName=v_lineName,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where lineId=v_lineId;
END

2018-12-06 18:29:47,966 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_6__productbrand_procedures.sql ...
2018-12-06 18:29:47,969 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_DELETE_PROCEDURE`
2018-12-06 18:29:47,970 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_DELETE_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
   	DELETE FROM productBrand WHERE brandId=v_brandId;
  
END

2018-12-06 18:29:47,971 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 14: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INFO_PROCEDURE`
2018-12-06 18:29:47,972 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 19: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INFO_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
	SELECT * FROM productBrand WHERE brandId = v_brandId;
END

2018-12-06 18:29:47,973 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 26: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INSERT_PROCEDURE`
2018-12-06 18:29:47,978 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INSERT_PROCEDURE`(IN v_brandId varchar(50),
     IN v_brandCode varchar(50), 
     IN v_brandName varchar(100),
     IN v_brandType varchar(32),
 IN  v_remark varchar(1024) , IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50))
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productBrand 
    (
     brandId, 
     brandCode,
     brandName,
     brandType,
     remark,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	   v_brandId, 
     v_brandCode,
     v_brandName,
     v_brandType,
     v_remark,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
END

2018-12-06 18:29:47,978 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 92: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_LISTALL_PROCEDURE`
2018-12-06 18:29:47,980 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_LISTALL_PROCEDURE`(IN v_startrow int,
	IN v_pagesize int,
	IN v_brandCode varchar(50),
  IN v_brandType varchar(32),
	IN v_brandName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50))
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) FROM 
  productBrand where 
  (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status=v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId);
	ELSE
	SELECT * FROM productBrand 
	where 
   (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status =v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:29:47,982 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 127: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_UPDATE_PROCEDURE`
2018-12-06 18:29:47,984 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 132: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_UPDATE_PROCEDURE`(IN v_brandId varchar(50),
  IN v_brandCode varchar(50),
	IN v_brandName varchar(100),
	IN v_brandType varchar(32),
  IN v_remark varchar(1024),
	IN v_sort int(4),
IN v_status varchar(16),IN v_modifierId VARCHAR(50),IN v_modifierName VARCHAR(50),IN v_modifyTime timestamp,IN v_lastModifyTime timestamp)
label:BEGIN
	UPDATE productBrand set 
  brandCode=v_brandCode,
	brandName=v_brandName,
  brandType=v_brandType,
	remark=v_remark,
	sort=v_sort,
  modifierId=v_modifierId,
  modifierName=v_modifierName,
  modifyTime=v_modifyTime,
  lastModifyTime=v_lastModifyTime,
	status=v_status
	where brandId =v_brandId;
END

2018-12-06 18:29:47,986 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_7__productbrand_table.sql ...
2018-12-06 18:29:47,988 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Table structure for productBrand
-- ----------------------------
DROP TABLE IF EXISTS `productBrand`
2018-12-06 18:29:48,001 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 5: CREATE TABLE `productBrand` (
  `brandId` varchar(50) NOT NULL,
  `brandCode` varchar(50) NOT NULL,
  `brandName` varchar(100) NOT NULL,
  `brandType` varchar(32) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL DEFAULT '1',
  `creatorName` varchar(50) NOT NULL DEFAULT 'admin',
  `modifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`brandId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
2018-12-06 18:29:48,003 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_8__init_producttype_table.sql ...
2018-12-06 18:29:48,004 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: DROP TABLE IF EXISTS `productType`
2018-12-06 18:29:48,011 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 2: CREATE TABLE `productType` (
  `typeId` varchar(50) NOT NULL COMMENT '产品分类Id',
  `typeCode` varchar(50) NOT NULL COMMENT '产品分类编号',
  `typeName` varchar(100) NOT NULL COMMENT '产品分类中文名称',
  `parentId` varchar(50) DEFAULT NULL COMMENT '产品分类父节点id',
  `isPhysical` tinyint(1) DEFAULT '1' COMMENT '是否物理分类',
  `toTransport` tinyint(1) DEFAULT '1' COMMENT '是否需要运输',
  `prodLineId` varchar(50) DEFAULT NULL COMMENT '所属产品线Id',
  `sort` int(4) NOT NULL COMMENT '排序号',
  `status` varchar(16) NOT NULL COMMENT '状态',
  `remark` varchar(50) DEFAULT NULL COMMENT '备注',
  `createdTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `creatorId` varchar(50) NOT NULL COMMENT '创建人ID',
  `creatorName` varchar(50) NOT NULL COMMENT '创建人姓名',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `modifierId` varchar(50) DEFAULT NULL COMMENT '更新人ID',
  `modifierName` varchar(50) DEFAULT NULL COMMENT '更新人姓名',
  `lastModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后更新时间',
  `tenantId` varchar(50) NOT NULL COMMENT '租户ID',
  PRIMARY KEY (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
2018-12-06 18:29:48,013 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_9__producttype_procedures.sql ...
2018-12-06 18:29:48,015 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`
2018-12-06 18:29:48,018 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`(
	 IN v_typeId varchar(50),
     IN v_typeCode varchar(50), 
     IN v_typeName varchar(100),
     IN v_parentId varchar(50),
     IN v_isPhysical tinyint(1),
     IN v_toTransport tinyint(1),
     IN v_prodLineId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_remark varchar(50),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productType 
    (
     typeId, 
     typeCode,
     typeName,
     parentId,
     isPhysical,
     toTransport,
     prodLineId,
     sort,
     status,
     remark,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     tenantId
	) VALUES 
	(
	 v_typeId, 
     v_typeCode,
     v_typeName,
     v_parentId,
     v_isPhysical,
     v_toTransport,
     v_prodLineId,
     v_sort,
     v_status,
     v_remark,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_tenantId
	); 
	
	

END

2018-12-06 18:29:48,019 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 81: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`
2018-12-06 18:29:48,021 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 86: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`(
    IN v_typeId varchar(50),
	IN v_typeCode varchar(50),
	IN v_typeName varchar(100),
	IN v_isPhysical tinyint(1),
	IN v_toTransport tinyint(1),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_prodLineId varchar(50),
	IN v_tenantId varchar(50),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productType set 
	typeCode=v_typeCode,
	typeName=v_typeName,
	isPhysical=v_isPhysical,
	toTransport=v_toTransport,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	prodLineId=v_prodLineId,
	tenantId=v_tenantId,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where typeId=v_typeId;
END

2018-12-06 18:29:48,021 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 125: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`
2018-12-06 18:29:48,022 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`(
	 IN v_typeId varchar(50)
)
lable:BEGIN
   	DELETE FROM productType WHERE typeId=v_typeId;
END

2018-12-06 18:29:48,023 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 142: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`
2018-12-06 18:29:48,023 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 147: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`(
	IN v_typeId varchar(50)
)
lable:BEGIN
	SELECT * FROM productType WHERE typeId = v_typeId;
END

2018-12-06 18:29:48,024 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 160: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`
2018-12-06 18:29:48,025 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 165: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`(
	IN v_typeName varchar(100)
)
lable:BEGIN
	SELECT * FROM productType
	WHERE (v_typeName is null or typeName like CONCAT('%',v_typeName,'%') );
END

2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_4__init_productline_table.sql (filename: V1_0_4__init_productline_table.sql)
2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_5__productline_procedures.sql (filename: V1_0_5__productline_procedures.sql)
2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_6__productbrand_procedures.sql (filename: V1_0_6__productbrand_procedures.sql)
2018-12-06 18:29:48,029 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_7__productbrand_table.sql (filename: V1_0_7__productbrand_table.sql)
2018-12-06 18:29:48,030 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_8__init_producttype_table.sql (filename: V1_0_8__init_producttype_table.sql)
2018-12-06 18:29:48,030 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_9__producttype_procedures.sql (filename: V1_0_9__producttype_procedures.sql)
2018-12-06 18:29:48,072 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 8 migrations (execution time 00:00.178s)
2018-12-06 18:29:48,078 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-12-06 18:29:48,099 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.9
2018-12-06 18:29:48,101 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-12-06 18:29:48,110 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 43 of 184M
2018-12-06 18:29:48,126 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:29:48,127 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:29:48,355 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '98daf385-82ad-41bf-9833-61187f025801': getConnection()...
2018-12-06 18:29:48,355 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '98daf385-82ad-41bf-9833-61187f025801': init...
2018-12-06 18:29:48,356 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '98daf385-82ad-41bf-9833-61187f025801': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=98daf385-82ad-41bf-9833-61187f025801, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.44.5:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-12-06 18:29:48,481 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:29:48,481 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:29:48,481 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:29:48,482 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling setAutoCommit(false)...
2018-12-06 18:29:48,484 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:37) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BEGIN  TRANSACTION
2018-12-06 18:29:48,484 com.qloudbiz.product.service.impl.ProductTypeServiceImpl [main] (ProductTypeServiceImpl.java:133) DEBUG --> >>>>>>>>>>>>>> service query tree method start
2018-12-06 18:30:29,914 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:30:29,917 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:30:29,954 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:30:30,071 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.44.5:3306/productdb (MySQL 5.5)
2018-12-06 18:30:30,072 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-12-06 18:30:30,100 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-12-06 18:30:30,100 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-12-06 18:30:30,108 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-12-06 18:30:30,113 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-12-06 18:30:30,113 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-12-06 18:30:30,113 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/LCY/git/oep-project/qloudbiz-api-product/target/classes/db/migration
2018-12-06 18:30:30,114 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-12-06 18:30:30,116 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\
2018-12-06 18:30:30,116 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\db\migration (db/migration)
2018-12-06 18:30:30,119 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-12-06 18:30:30,119 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_4__init_productline_table.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_5__productline_procedures.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_6__productbrand_procedures.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_7__productbrand_table.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_8__init_producttype_table.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_9__producttype_procedures.sql
2018-12-06 18:30:30,121 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-12-06 18:30:30,127 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-12-06 18:30:30,134 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-12-06 18:30:30,150 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-12-06 18:30:30,162 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-12-06 18:30:30,168 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-12-06 18:30:30,170 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-12-06 18:30:30,173 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-12-06 18:30:30,177 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-12-06 18:30:30,184 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-12-06 18:30:30,185 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-12-06 18:30:30,188 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-12-06 18:30:30,189 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE
2018-12-06 18:30:30,191 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE PROCEDURE QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE(
	IN v_productId int
)
lable:BEGIN
	SELECT productId,code,name FROM product where productId=v_productId;
END
2018-12-06 18:30:30,192 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 59: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-12-06 18:30:30,196 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 62: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-12-06 18:30:30,197 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 77: -- update QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-12-06 18:30:30,200 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 80: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-12-06 18:30:30,202 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_4__init_productline_table.sql ...
2018-12-06 18:30:30,206 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 18: -- ----------------------------
-- Table structure for productLine
-- ----------------------------
DROP TABLE IF EXISTS `productLine`
2018-12-06 18:30:30,211 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 22: CREATE TABLE `productLine` (
  `lineId` varchar(50) NOT NULL,
  `lineCode` varchar(50) NOT NULL,
  `lineName` varchar(100) NOT NULL,
  `parentId` varchar(50) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL,
  `creatorName` varchar(50) NOT NULL,
  `modifyTime` timestamp NULL DEFAULT NULL,
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT NULL,
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lineId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC
2018-12-06 18:30:30,213 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_5__productline_procedures.sql ...
2018-12-06 18:30:30,215 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`
2018-12-06 18:30:30,216 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`(
	 IN v_lineId varchar(50)
)
lable:BEGIN
   	DELETE FROM productLine WHERE lineId=v_lineId;
END

2018-12-06 18:30:30,218 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 15: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`
2018-12-06 18:30:30,219 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 20: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`(
	IN v_lineId varchar(50)
)
lable:BEGIN
	SELECT * FROM productLine WHERE lineId = v_lineId;
END

2018-12-06 18:30:30,220 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 29: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`
2018-12-06 18:30:30,228 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`(
	 IN v_lineId varchar(50),
     IN v_lineCode varchar(50), 
     IN v_lineName varchar(100),
     IN v_parentId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productLine 
    (
     lineId, 
     lineCode,
     lineName,
     parentId,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	 v_lineId, 
     v_lineCode,
     v_lineName,
     v_parentId,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
	

END

2018-12-06 18:30:30,229 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`
2018-12-06 18:30:30,232 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 102: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_lineCode varchar(50),
	IN v_lineName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50)
)
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) 
	FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId);
	ELSE
	SELECT * FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:30:30,233 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`
2018-12-06 18:30:30,245 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 135: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`(
  IN v_lineId varchar(50),
	IN v_lineName varchar(100),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productLine set 
	lineName=v_lineName,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where lineId=v_lineId;
END

2018-12-06 18:30:30,248 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_6__productbrand_procedures.sql ...
2018-12-06 18:30:30,250 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_DELETE_PROCEDURE`
2018-12-06 18:30:30,250 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_DELETE_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
   	DELETE FROM productBrand WHERE brandId=v_brandId;
  
END

2018-12-06 18:30:30,251 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 14: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INFO_PROCEDURE`
2018-12-06 18:30:30,251 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 19: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INFO_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
	SELECT * FROM productBrand WHERE brandId = v_brandId;
END

2018-12-06 18:30:30,252 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 26: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INSERT_PROCEDURE`
2018-12-06 18:30:30,256 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INSERT_PROCEDURE`(IN v_brandId varchar(50),
     IN v_brandCode varchar(50), 
     IN v_brandName varchar(100),
     IN v_brandType varchar(32),
 IN  v_remark varchar(1024) , IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50))
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productBrand 
    (
     brandId, 
     brandCode,
     brandName,
     brandType,
     remark,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	   v_brandId, 
     v_brandCode,
     v_brandName,
     v_brandType,
     v_remark,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
END

2018-12-06 18:30:30,257 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 92: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_LISTALL_PROCEDURE`
2018-12-06 18:30:30,260 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_LISTALL_PROCEDURE`(IN v_startrow int,
	IN v_pagesize int,
	IN v_brandCode varchar(50),
  IN v_brandType varchar(32),
	IN v_brandName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50))
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) FROM 
  productBrand where 
  (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status=v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId);
	ELSE
	SELECT * FROM productBrand 
	where 
   (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status =v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:30:30,261 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 127: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_UPDATE_PROCEDURE`
2018-12-06 18:30:30,263 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 132: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_UPDATE_PROCEDURE`(IN v_brandId varchar(50),
  IN v_brandCode varchar(50),
	IN v_brandName varchar(100),
	IN v_brandType varchar(32),
  IN v_remark varchar(1024),
	IN v_sort int(4),
IN v_status varchar(16),IN v_modifierId VARCHAR(50),IN v_modifierName VARCHAR(50),IN v_modifyTime timestamp,IN v_lastModifyTime timestamp)
label:BEGIN
	UPDATE productBrand set 
  brandCode=v_brandCode,
	brandName=v_brandName,
  brandType=v_brandType,
	remark=v_remark,
	sort=v_sort,
  modifierId=v_modifierId,
  modifierName=v_modifierName,
  modifyTime=v_modifyTime,
  lastModifyTime=v_lastModifyTime,
	status=v_status
	where brandId =v_brandId;
END

2018-12-06 18:30:30,266 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_7__productbrand_table.sql ...
2018-12-06 18:30:30,267 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Table structure for productBrand
-- ----------------------------
DROP TABLE IF EXISTS `productBrand`
2018-12-06 18:30:30,269 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 5: CREATE TABLE `productBrand` (
  `brandId` varchar(50) NOT NULL,
  `brandCode` varchar(50) NOT NULL,
  `brandName` varchar(100) NOT NULL,
  `brandType` varchar(32) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL DEFAULT '1',
  `creatorName` varchar(50) NOT NULL DEFAULT 'admin',
  `modifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`brandId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
2018-12-06 18:30:30,271 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_8__init_producttype_table.sql ...
2018-12-06 18:30:30,272 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: DROP TABLE IF EXISTS `productType`
2018-12-06 18:30:30,277 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 2: CREATE TABLE `productType` (
  `typeId` varchar(50) NOT NULL COMMENT '产品分类Id',
  `typeCode` varchar(50) NOT NULL COMMENT '产品分类编号',
  `typeName` varchar(100) NOT NULL COMMENT '产品分类中文名称',
  `parentId` varchar(50) DEFAULT NULL COMMENT '产品分类父节点id',
  `isPhysical` tinyint(1) DEFAULT '1' COMMENT '是否物理分类',
  `toTransport` tinyint(1) DEFAULT '1' COMMENT '是否需要运输',
  `prodLineId` varchar(50) DEFAULT NULL COMMENT '所属产品线Id',
  `sort` int(4) NOT NULL COMMENT '排序号',
  `status` varchar(16) NOT NULL COMMENT '状态',
  `remark` varchar(50) DEFAULT NULL COMMENT '备注',
  `createdTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `creatorId` varchar(50) NOT NULL COMMENT '创建人ID',
  `creatorName` varchar(50) NOT NULL COMMENT '创建人姓名',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `modifierId` varchar(50) DEFAULT NULL COMMENT '更新人ID',
  `modifierName` varchar(50) DEFAULT NULL COMMENT '更新人姓名',
  `lastModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后更新时间',
  `tenantId` varchar(50) NOT NULL COMMENT '租户ID',
  PRIMARY KEY (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
2018-12-06 18:30:30,279 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_9__producttype_procedures.sql ...
2018-12-06 18:30:30,280 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`
2018-12-06 18:30:30,283 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`(
	 IN v_typeId varchar(50),
     IN v_typeCode varchar(50), 
     IN v_typeName varchar(100),
     IN v_parentId varchar(50),
     IN v_isPhysical tinyint(1),
     IN v_toTransport tinyint(1),
     IN v_prodLineId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_remark varchar(50),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productType 
    (
     typeId, 
     typeCode,
     typeName,
     parentId,
     isPhysical,
     toTransport,
     prodLineId,
     sort,
     status,
     remark,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     tenantId
	) VALUES 
	(
	 v_typeId, 
     v_typeCode,
     v_typeName,
     v_parentId,
     v_isPhysical,
     v_toTransport,
     v_prodLineId,
     v_sort,
     v_status,
     v_remark,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_tenantId
	); 
	
	

END

2018-12-06 18:30:30,284 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 81: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`
2018-12-06 18:30:30,286 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 86: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`(
    IN v_typeId varchar(50),
	IN v_typeCode varchar(50),
	IN v_typeName varchar(100),
	IN v_isPhysical tinyint(1),
	IN v_toTransport tinyint(1),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_prodLineId varchar(50),
	IN v_tenantId varchar(50),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productType set 
	typeCode=v_typeCode,
	typeName=v_typeName,
	isPhysical=v_isPhysical,
	toTransport=v_toTransport,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	prodLineId=v_prodLineId,
	tenantId=v_tenantId,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where typeId=v_typeId;
END

2018-12-06 18:30:30,286 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 125: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`
2018-12-06 18:30:30,287 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`(
	 IN v_typeId varchar(50)
)
lable:BEGIN
   	DELETE FROM productType WHERE typeId=v_typeId;
END

2018-12-06 18:30:30,288 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 142: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`
2018-12-06 18:30:30,288 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 147: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`(
	IN v_typeId varchar(50)
)
lable:BEGIN
	SELECT * FROM productType WHERE typeId = v_typeId;
END

2018-12-06 18:30:30,289 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 160: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`
2018-12-06 18:30:30,290 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 165: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`(
	IN v_typeName varchar(100)
)
lable:BEGIN
	SELECT * FROM productType
	WHERE (v_typeName is null or typeName like CONCAT('%',v_typeName,'%') );
END

2018-12-06 18:30:30,291 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-12-06 18:30:30,292 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-12-06 18:30:30,292 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_4__init_productline_table.sql (filename: V1_0_4__init_productline_table.sql)
2018-12-06 18:30:30,292 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_5__productline_procedures.sql (filename: V1_0_5__productline_procedures.sql)
2018-12-06 18:30:30,292 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_6__productbrand_procedures.sql (filename: V1_0_6__productbrand_procedures.sql)
2018-12-06 18:30:30,292 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_7__productbrand_table.sql (filename: V1_0_7__productbrand_table.sql)
2018-12-06 18:30:30,293 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_8__init_producttype_table.sql (filename: V1_0_8__init_producttype_table.sql)
2018-12-06 18:30:30,293 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_9__producttype_procedures.sql (filename: V1_0_9__producttype_procedures.sql)
2018-12-06 18:30:30,337 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 8 migrations (execution time 00:00.178s)
2018-12-06 18:30:30,343 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-12-06 18:30:30,362 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.9
2018-12-06 18:30:30,365 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-12-06 18:30:30,405 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 43 of 184M
2018-12-06 18:30:30,422 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:30:30,423 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:30:30,652 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '06253d80-32e3-4d12-a545-3a1823a81dab': getConnection()...
2018-12-06 18:30:30,652 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '06253d80-32e3-4d12-a545-3a1823a81dab': init...
2018-12-06 18:30:30,653 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '06253d80-32e3-4d12-a545-3a1823a81dab': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=06253d80-32e3-4d12-a545-3a1823a81dab, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.44.5:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-12-06 18:30:30,769 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:30:30,769 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:30:30,769 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:30:30,769 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling setAutoCommit(false)...
2018-12-06 18:30:30,772 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:37) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BEGIN  TRANSACTION
2018-12-06 18:30:30,772 com.qloudbiz.product.service.impl.ProductTypeServiceImpl [main] (ProductTypeServiceImpl.java:133) DEBUG --> >>>>>>>>>>>>>> service query tree method start
2018-12-06 18:31:04,438 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:31:04,438 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:31:04,439 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:31:04,439 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling prepareCall({CALL QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE(?)})...
2018-12-06 18:31:04,469 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:31:04,469 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:31:04,469 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:36:39,801 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:36:39,804 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:36:39,839 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:36:39,963 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.44.5:3306/productdb (MySQL 5.5)
2018-12-06 18:36:39,963 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-12-06 18:36:39,984 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-12-06 18:36:39,984 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-12-06 18:36:39,991 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-12-06 18:36:39,994 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-12-06 18:36:39,995 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@73d16e93 ...
2018-12-06 18:36:39,995 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/LCY/git/oep-project/qloudbiz-api-product/target/classes/db/migration
2018-12-06 18:36:39,996 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-12-06 18:36:39,998 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\
2018-12-06 18:36:39,998 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\db\migration (db/migration)
2018-12-06 18:36:40,002 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-12-06 18:36:40,002 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_4__init_productline_table.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_5__productline_procedures.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_6__productbrand_procedures.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_7__productbrand_table.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_8__init_producttype_table.sql
2018-12-06 18:36:40,004 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_9__producttype_procedures.sql
2018-12-06 18:36:40,005 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-12-06 18:36:40,010 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-12-06 18:36:40,016 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-12-06 18:36:40,028 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-12-06 18:36:40,036 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-12-06 18:36:40,041 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-12-06 18:36:40,042 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-12-06 18:36:40,045 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-12-06 18:36:40,046 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-12-06 18:36:40,053 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-12-06 18:36:40,054 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-12-06 18:36:40,057 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-12-06 18:36:40,059 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE
2018-12-06 18:36:40,061 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE PROCEDURE QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE(
	IN v_productId int
)
lable:BEGIN
	SELECT productId,code,name FROM product where productId=v_productId;
END
2018-12-06 18:36:40,062 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 59: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-12-06 18:36:40,064 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 62: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-12-06 18:36:40,065 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 77: -- update QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-12-06 18:36:40,075 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 80: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-12-06 18:36:40,077 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_4__init_productline_table.sql ...
2018-12-06 18:36:40,081 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 18: -- ----------------------------
-- Table structure for productLine
-- ----------------------------
DROP TABLE IF EXISTS `productLine`
2018-12-06 18:36:40,083 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 22: CREATE TABLE `productLine` (
  `lineId` varchar(50) NOT NULL,
  `lineCode` varchar(50) NOT NULL,
  `lineName` varchar(100) NOT NULL,
  `parentId` varchar(50) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL,
  `creatorName` varchar(50) NOT NULL,
  `modifyTime` timestamp NULL DEFAULT NULL,
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT NULL,
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lineId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC
2018-12-06 18:36:40,085 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_5__productline_procedures.sql ...
2018-12-06 18:36:40,086 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`
2018-12-06 18:36:40,087 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`(
	 IN v_lineId varchar(50)
)
lable:BEGIN
   	DELETE FROM productLine WHERE lineId=v_lineId;
END

2018-12-06 18:36:40,088 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 15: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`
2018-12-06 18:36:40,089 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 20: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`(
	IN v_lineId varchar(50)
)
lable:BEGIN
	SELECT * FROM productLine WHERE lineId = v_lineId;
END

2018-12-06 18:36:40,089 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 29: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`
2018-12-06 18:36:40,093 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`(
	 IN v_lineId varchar(50),
     IN v_lineCode varchar(50), 
     IN v_lineName varchar(100),
     IN v_parentId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productLine 
    (
     lineId, 
     lineCode,
     lineName,
     parentId,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	 v_lineId, 
     v_lineCode,
     v_lineName,
     v_parentId,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
	

END

2018-12-06 18:36:40,094 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`
2018-12-06 18:36:40,096 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 102: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_lineCode varchar(50),
	IN v_lineName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50)
)
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) 
	FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId);
	ELSE
	SELECT * FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:36:40,097 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`
2018-12-06 18:36:40,099 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 135: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`(
  IN v_lineId varchar(50),
	IN v_lineName varchar(100),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productLine set 
	lineName=v_lineName,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where lineId=v_lineId;
END

2018-12-06 18:36:40,103 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_6__productbrand_procedures.sql ...
2018-12-06 18:36:40,104 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_DELETE_PROCEDURE`
2018-12-06 18:36:40,105 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_DELETE_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
   	DELETE FROM productBrand WHERE brandId=v_brandId;
  
END

2018-12-06 18:36:40,106 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 14: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INFO_PROCEDURE`
2018-12-06 18:36:40,107 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 19: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INFO_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
	SELECT * FROM productBrand WHERE brandId = v_brandId;
END

2018-12-06 18:36:40,108 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 26: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INSERT_PROCEDURE`
2018-12-06 18:36:40,112 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INSERT_PROCEDURE`(IN v_brandId varchar(50),
     IN v_brandCode varchar(50), 
     IN v_brandName varchar(100),
     IN v_brandType varchar(32),
 IN  v_remark varchar(1024) , IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50))
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productBrand 
    (
     brandId, 
     brandCode,
     brandName,
     brandType,
     remark,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	   v_brandId, 
     v_brandCode,
     v_brandName,
     v_brandType,
     v_remark,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
END

2018-12-06 18:36:40,114 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 92: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_LISTALL_PROCEDURE`
2018-12-06 18:36:40,118 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_LISTALL_PROCEDURE`(IN v_startrow int,
	IN v_pagesize int,
	IN v_brandCode varchar(50),
  IN v_brandType varchar(32),
	IN v_brandName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50))
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) FROM 
  productBrand where 
  (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status=v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId);
	ELSE
	SELECT * FROM productBrand 
	where 
   (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status =v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:36:40,119 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 127: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_UPDATE_PROCEDURE`
2018-12-06 18:36:40,121 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 132: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_UPDATE_PROCEDURE`(IN v_brandId varchar(50),
  IN v_brandCode varchar(50),
	IN v_brandName varchar(100),
	IN v_brandType varchar(32),
  IN v_remark varchar(1024),
	IN v_sort int(4),
IN v_status varchar(16),IN v_modifierId VARCHAR(50),IN v_modifierName VARCHAR(50),IN v_modifyTime timestamp,IN v_lastModifyTime timestamp)
label:BEGIN
	UPDATE productBrand set 
  brandCode=v_brandCode,
	brandName=v_brandName,
  brandType=v_brandType,
	remark=v_remark,
	sort=v_sort,
  modifierId=v_modifierId,
  modifierName=v_modifierName,
  modifyTime=v_modifyTime,
  lastModifyTime=v_lastModifyTime,
	status=v_status
	where brandId =v_brandId;
END

2018-12-06 18:36:40,123 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_7__productbrand_table.sql ...
2018-12-06 18:36:40,125 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Table structure for productBrand
-- ----------------------------
DROP TABLE IF EXISTS `productBrand`
2018-12-06 18:36:40,126 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 5: CREATE TABLE `productBrand` (
  `brandId` varchar(50) NOT NULL,
  `brandCode` varchar(50) NOT NULL,
  `brandName` varchar(100) NOT NULL,
  `brandType` varchar(32) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL DEFAULT '1',
  `creatorName` varchar(50) NOT NULL DEFAULT 'admin',
  `modifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`brandId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
2018-12-06 18:36:40,128 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_8__init_producttype_table.sql ...
2018-12-06 18:36:40,129 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: DROP TABLE IF EXISTS `productType`
2018-12-06 18:36:40,134 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 2: CREATE TABLE `productType` (
  `typeId` varchar(50) NOT NULL COMMENT '产品分类Id',
  `typeCode` varchar(50) NOT NULL COMMENT '产品分类编号',
  `typeName` varchar(100) NOT NULL COMMENT '产品分类中文名称',
  `parentId` varchar(50) DEFAULT NULL COMMENT '产品分类父节点id',
  `isPhysical` tinyint(1) DEFAULT '1' COMMENT '是否物理分类',
  `toTransport` tinyint(1) DEFAULT '1' COMMENT '是否需要运输',
  `prodLineId` varchar(50) DEFAULT NULL COMMENT '所属产品线Id',
  `sort` int(4) NOT NULL COMMENT '排序号',
  `status` varchar(16) NOT NULL COMMENT '状态',
  `remark` varchar(50) DEFAULT NULL COMMENT '备注',
  `createdTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `creatorId` varchar(50) NOT NULL COMMENT '创建人ID',
  `creatorName` varchar(50) NOT NULL COMMENT '创建人姓名',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `modifierId` varchar(50) DEFAULT NULL COMMENT '更新人ID',
  `modifierName` varchar(50) DEFAULT NULL COMMENT '更新人姓名',
  `lastModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后更新时间',
  `tenantId` varchar(50) NOT NULL COMMENT '租户ID',
  PRIMARY KEY (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
2018-12-06 18:36:40,136 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_9__producttype_procedures.sql ...
2018-12-06 18:36:40,138 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`
2018-12-06 18:36:40,141 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`(
	 IN v_typeId varchar(50),
     IN v_typeCode varchar(50), 
     IN v_typeName varchar(100),
     IN v_parentId varchar(50),
     IN v_isPhysical tinyint(1),
     IN v_toTransport tinyint(1),
     IN v_prodLineId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_remark varchar(50),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productType 
    (
     typeId, 
     typeCode,
     typeName,
     parentId,
     isPhysical,
     toTransport,
     prodLineId,
     sort,
     status,
     remark,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     tenantId
	) VALUES 
	(
	 v_typeId, 
     v_typeCode,
     v_typeName,
     v_parentId,
     v_isPhysical,
     v_toTransport,
     v_prodLineId,
     v_sort,
     v_status,
     v_remark,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_tenantId
	); 
	
	

END

2018-12-06 18:36:40,142 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 81: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`
2018-12-06 18:36:40,144 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 86: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`(
    IN v_typeId varchar(50),
	IN v_typeCode varchar(50),
	IN v_typeName varchar(100),
	IN v_isPhysical tinyint(1),
	IN v_toTransport tinyint(1),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_prodLineId varchar(50),
	IN v_tenantId varchar(50),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productType set 
	typeCode=v_typeCode,
	typeName=v_typeName,
	isPhysical=v_isPhysical,
	toTransport=v_toTransport,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	prodLineId=v_prodLineId,
	tenantId=v_tenantId,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where typeId=v_typeId;
END

2018-12-06 18:36:40,144 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 125: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`
2018-12-06 18:36:40,145 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`(
	 IN v_typeId varchar(50)
)
lable:BEGIN
   	DELETE FROM productType WHERE typeId=v_typeId;
END

2018-12-06 18:36:40,146 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 142: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`
2018-12-06 18:36:40,146 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 147: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`(
	IN v_typeId varchar(50)
)
lable:BEGIN
	SELECT * FROM productType WHERE typeId = v_typeId;
END

2018-12-06 18:36:40,147 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 160: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`
2018-12-06 18:36:40,148 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 165: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`(
	IN v_typeName varchar(100)
)
lable:BEGIN
	SELECT * FROM productType
	WHERE (v_typeName is null or typeName like CONCAT('%',v_typeName,'%') );
END

2018-12-06 18:36:40,150 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_4__init_productline_table.sql (filename: V1_0_4__init_productline_table.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_5__productline_procedures.sql (filename: V1_0_5__productline_procedures.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_6__productbrand_procedures.sql (filename: V1_0_6__productbrand_procedures.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_7__productbrand_table.sql (filename: V1_0_7__productbrand_table.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_8__init_producttype_table.sql (filename: V1_0_8__init_producttype_table.sql)
2018-12-06 18:36:40,151 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_9__producttype_procedures.sql (filename: V1_0_9__producttype_procedures.sql)
2018-12-06 18:36:40,190 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 8 migrations (execution time 00:00.143s)
2018-12-06 18:36:40,211 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-12-06 18:36:40,229 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.9
2018-12-06 18:36:40,232 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-12-06 18:36:40,239 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 42 of 184M
2018-12-06 18:36:40,252 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:36:40,253 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:36:40,446 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '2d8512a5-ec3d-44a5-b116-75b03e8a3e8a': getConnection()...
2018-12-06 18:36:40,446 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2d8512a5-ec3d-44a5-b116-75b03e8a3e8a': init...
2018-12-06 18:36:40,447 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '2d8512a5-ec3d-44a5-b116-75b03e8a3e8a': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=2d8512a5-ec3d-44a5-b116-75b03e8a3e8a, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.44.5:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-12-06 18:36:40,553 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,553 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling getAutoCommit...
2018-12-06 18:36:40,553 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,553 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling setAutoCommit(false)...
2018-12-06 18:36:40,556 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:37) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BEGIN  TRANSACTION
2018-12-06 18:36:40,556 com.qloudbiz.product.service.impl.ProductTypeServiceImpl [main] (ProductTypeServiceImpl.java:133) DEBUG --> >>>>>>>>>>>>>> service query tree method start
2018-12-06 18:36:40,557 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: isClosed()...
2018-12-06 18:36:40,557 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,558 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,558 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling prepareCall({CALL QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE(?)})...
2018-12-06 18:36:40,580 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: isClosed()...
2018-12-06 18:36:40,580 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,580 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling getAutoCommit...
2018-12-06 18:36:40,586 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: isClosed()...
2018-12-06 18:36:40,586 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,586 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling getAutoCommit...
2018-12-06 18:36:40,586 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,586 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: calling commit...
2018-12-06 18:36:40,588 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:46) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>COMMIT TRANSACTION
2018-12-06 18:36:40,588 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:62) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CLOSE CONNECTION
2018-12-06 18:36:40,588 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: WARNING: transaction manager not running?
2018-12-06 18:36:40,588 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@276438c9: close()...
2018-12-06 18:36:56,117 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:36:56,119 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:36:56,154 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:36:56,281 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.44.5:3306/productdb (MySQL 5.5)
2018-12-06 18:36:56,282 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-12-06 18:36:56,307 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-12-06 18:36:56,307 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-12-06 18:36:56,315 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-12-06 18:36:56,321 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-12-06 18:36:56,321 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-12-06 18:36:56,322 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/LCY/git/oep-project/qloudbiz-api-product/target/classes/db/migration
2018-12-06 18:36:56,322 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-12-06 18:36:56,325 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\
2018-12-06 18:36:56,326 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\db\migration (db/migration)
2018-12-06 18:36:56,329 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-12-06 18:36:56,329 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-12-06 18:36:56,330 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_4__init_productline_table.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_5__productline_procedures.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_6__productbrand_procedures.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_7__productbrand_table.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_8__init_producttype_table.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_9__producttype_procedures.sql
2018-12-06 18:36:56,331 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-12-06 18:36:56,336 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-12-06 18:36:56,344 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-12-06 18:36:56,360 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-12-06 18:36:56,374 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-12-06 18:36:56,380 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-12-06 18:36:56,382 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-12-06 18:36:56,385 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-12-06 18:36:56,387 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-12-06 18:36:56,394 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-12-06 18:36:56,395 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-12-06 18:36:56,399 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-12-06 18:36:56,400 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE
2018-12-06 18:36:56,403 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE PROCEDURE QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE(
	IN v_productId int
)
lable:BEGIN
	SELECT productId,code,name FROM product where productId=v_productId;
END
2018-12-06 18:36:56,404 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 59: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-12-06 18:36:56,407 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 62: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-12-06 18:36:56,408 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 77: -- update QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-12-06 18:36:56,410 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 80: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-12-06 18:36:56,413 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_4__init_productline_table.sql ...
2018-12-06 18:36:56,417 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 18: -- ----------------------------
-- Table structure for productLine
-- ----------------------------
DROP TABLE IF EXISTS `productLine`
2018-12-06 18:36:56,421 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 22: CREATE TABLE `productLine` (
  `lineId` varchar(50) NOT NULL,
  `lineCode` varchar(50) NOT NULL,
  `lineName` varchar(100) NOT NULL,
  `parentId` varchar(50) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL,
  `creatorName` varchar(50) NOT NULL,
  `modifyTime` timestamp NULL DEFAULT NULL,
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT NULL,
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lineId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC
2018-12-06 18:36:56,425 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_5__productline_procedures.sql ...
2018-12-06 18:36:56,427 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`
2018-12-06 18:36:56,429 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`(
	 IN v_lineId varchar(50)
)
lable:BEGIN
   	DELETE FROM productLine WHERE lineId=v_lineId;
END

2018-12-06 18:36:56,430 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 15: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`
2018-12-06 18:36:56,432 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 20: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`(
	IN v_lineId varchar(50)
)
lable:BEGIN
	SELECT * FROM productLine WHERE lineId = v_lineId;
END

2018-12-06 18:36:56,433 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 29: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`
2018-12-06 18:36:56,437 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`(
	 IN v_lineId varchar(50),
     IN v_lineCode varchar(50), 
     IN v_lineName varchar(100),
     IN v_parentId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productLine 
    (
     lineId, 
     lineCode,
     lineName,
     parentId,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	 v_lineId, 
     v_lineCode,
     v_lineName,
     v_parentId,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
	

END

2018-12-06 18:36:56,438 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`
2018-12-06 18:36:56,439 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 102: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_lineCode varchar(50),
	IN v_lineName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50)
)
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) 
	FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId);
	ELSE
	SELECT * FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:36:56,440 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`
2018-12-06 18:36:56,441 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 135: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`(
  IN v_lineId varchar(50),
	IN v_lineName varchar(100),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productLine set 
	lineName=v_lineName,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where lineId=v_lineId;
END

2018-12-06 18:36:56,444 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_6__productbrand_procedures.sql ...
2018-12-06 18:36:56,446 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_DELETE_PROCEDURE`
2018-12-06 18:36:56,447 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_DELETE_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
   	DELETE FROM productBrand WHERE brandId=v_brandId;
  
END

2018-12-06 18:36:56,448 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 14: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INFO_PROCEDURE`
2018-12-06 18:36:56,449 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 19: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INFO_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
	SELECT * FROM productBrand WHERE brandId = v_brandId;
END

2018-12-06 18:36:56,450 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 26: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INSERT_PROCEDURE`
2018-12-06 18:36:56,455 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INSERT_PROCEDURE`(IN v_brandId varchar(50),
     IN v_brandCode varchar(50), 
     IN v_brandName varchar(100),
     IN v_brandType varchar(32),
 IN  v_remark varchar(1024) , IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50))
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productBrand 
    (
     brandId, 
     brandCode,
     brandName,
     brandType,
     remark,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	   v_brandId, 
     v_brandCode,
     v_brandName,
     v_brandType,
     v_remark,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
END

2018-12-06 18:36:56,456 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 92: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_LISTALL_PROCEDURE`
2018-12-06 18:36:56,458 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_LISTALL_PROCEDURE`(IN v_startrow int,
	IN v_pagesize int,
	IN v_brandCode varchar(50),
  IN v_brandType varchar(32),
	IN v_brandName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50))
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) FROM 
  productBrand where 
  (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status=v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId);
	ELSE
	SELECT * FROM productBrand 
	where 
   (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status =v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:36:56,459 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 127: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_UPDATE_PROCEDURE`
2018-12-06 18:36:56,461 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 132: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_UPDATE_PROCEDURE`(IN v_brandId varchar(50),
  IN v_brandCode varchar(50),
	IN v_brandName varchar(100),
	IN v_brandType varchar(32),
  IN v_remark varchar(1024),
	IN v_sort int(4),
IN v_status varchar(16),IN v_modifierId VARCHAR(50),IN v_modifierName VARCHAR(50),IN v_modifyTime timestamp,IN v_lastModifyTime timestamp)
label:BEGIN
	UPDATE productBrand set 
  brandCode=v_brandCode,
	brandName=v_brandName,
  brandType=v_brandType,
	remark=v_remark,
	sort=v_sort,
  modifierId=v_modifierId,
  modifierName=v_modifierName,
  modifyTime=v_modifyTime,
  lastModifyTime=v_lastModifyTime,
	status=v_status
	where brandId =v_brandId;
END

2018-12-06 18:36:56,464 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_7__productbrand_table.sql ...
2018-12-06 18:36:56,465 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Table structure for productBrand
-- ----------------------------
DROP TABLE IF EXISTS `productBrand`
2018-12-06 18:36:56,468 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 5: CREATE TABLE `productBrand` (
  `brandId` varchar(50) NOT NULL,
  `brandCode` varchar(50) NOT NULL,
  `brandName` varchar(100) NOT NULL,
  `brandType` varchar(32) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL DEFAULT '1',
  `creatorName` varchar(50) NOT NULL DEFAULT 'admin',
  `modifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`brandId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
2018-12-06 18:36:56,469 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_8__init_producttype_table.sql ...
2018-12-06 18:36:56,471 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: DROP TABLE IF EXISTS `productType`
2018-12-06 18:36:56,475 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 2: CREATE TABLE `productType` (
  `typeId` varchar(50) NOT NULL COMMENT '产品分类Id',
  `typeCode` varchar(50) NOT NULL COMMENT '产品分类编号',
  `typeName` varchar(100) NOT NULL COMMENT '产品分类中文名称',
  `parentId` varchar(50) DEFAULT NULL COMMENT '产品分类父节点id',
  `isPhysical` tinyint(1) DEFAULT '1' COMMENT '是否物理分类',
  `toTransport` tinyint(1) DEFAULT '1' COMMENT '是否需要运输',
  `prodLineId` varchar(50) DEFAULT NULL COMMENT '所属产品线Id',
  `sort` int(4) NOT NULL COMMENT '排序号',
  `status` varchar(16) NOT NULL COMMENT '状态',
  `remark` varchar(50) DEFAULT NULL COMMENT '备注',
  `createdTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `creatorId` varchar(50) NOT NULL COMMENT '创建人ID',
  `creatorName` varchar(50) NOT NULL COMMENT '创建人姓名',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `modifierId` varchar(50) DEFAULT NULL COMMENT '更新人ID',
  `modifierName` varchar(50) DEFAULT NULL COMMENT '更新人姓名',
  `lastModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后更新时间',
  `tenantId` varchar(50) NOT NULL COMMENT '租户ID',
  PRIMARY KEY (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
2018-12-06 18:36:56,477 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_9__producttype_procedures.sql ...
2018-12-06 18:36:56,479 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`
2018-12-06 18:36:56,482 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`(
	 IN v_typeId varchar(50),
     IN v_typeCode varchar(50), 
     IN v_typeName varchar(100),
     IN v_parentId varchar(50),
     IN v_isPhysical tinyint(1),
     IN v_toTransport tinyint(1),
     IN v_prodLineId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_remark varchar(50),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productType 
    (
     typeId, 
     typeCode,
     typeName,
     parentId,
     isPhysical,
     toTransport,
     prodLineId,
     sort,
     status,
     remark,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     tenantId
	) VALUES 
	(
	 v_typeId, 
     v_typeCode,
     v_typeName,
     v_parentId,
     v_isPhysical,
     v_toTransport,
     v_prodLineId,
     v_sort,
     v_status,
     v_remark,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_tenantId
	); 
	
	

END

2018-12-06 18:36:56,483 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 81: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`
2018-12-06 18:36:56,486 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 86: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`(
    IN v_typeId varchar(50),
	IN v_typeCode varchar(50),
	IN v_typeName varchar(100),
	IN v_isPhysical tinyint(1),
	IN v_toTransport tinyint(1),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_prodLineId varchar(50),
	IN v_tenantId varchar(50),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productType set 
	typeCode=v_typeCode,
	typeName=v_typeName,
	isPhysical=v_isPhysical,
	toTransport=v_toTransport,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	prodLineId=v_prodLineId,
	tenantId=v_tenantId,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where typeId=v_typeId;
END

2018-12-06 18:36:56,486 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 125: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`
2018-12-06 18:36:56,487 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`(
	 IN v_typeId varchar(50)
)
lable:BEGIN
   	DELETE FROM productType WHERE typeId=v_typeId;
END

2018-12-06 18:36:56,488 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 142: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`
2018-12-06 18:36:56,488 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 147: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`(
	IN v_typeId varchar(50)
)
lable:BEGIN
	SELECT * FROM productType WHERE typeId = v_typeId;
END

2018-12-06 18:36:56,489 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 160: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`
2018-12-06 18:36:56,490 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 165: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`(
	IN v_typeName varchar(100)
)
lable:BEGIN
	SELECT * FROM productType
	WHERE (v_typeName is null or typeName like CONCAT('%',v_typeName,'%') );
END

2018-12-06 18:36:56,492 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-12-06 18:36:56,492 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-12-06 18:36:56,492 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_4__init_productline_table.sql (filename: V1_0_4__init_productline_table.sql)
2018-12-06 18:36:56,492 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_5__productline_procedures.sql (filename: V1_0_5__productline_procedures.sql)
2018-12-06 18:36:56,493 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_6__productbrand_procedures.sql (filename: V1_0_6__productbrand_procedures.sql)
2018-12-06 18:36:56,493 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_7__productbrand_table.sql (filename: V1_0_7__productbrand_table.sql)
2018-12-06 18:36:56,493 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_8__init_producttype_table.sql (filename: V1_0_8__init_producttype_table.sql)
2018-12-06 18:36:56,493 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_9__producttype_procedures.sql (filename: V1_0_9__producttype_procedures.sql)
2018-12-06 18:36:56,531 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 8 migrations (execution time 00:00.159s)
2018-12-06 18:36:56,536 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-12-06 18:36:56,554 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.9
2018-12-06 18:36:56,556 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-12-06 18:36:56,565 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 43 of 184M
2018-12-06 18:36:56,584 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:36:56,586 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:36:56,806 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean '230a1789-a3e4-4dd1-a789-a3660e5439fd': getConnection()...
2018-12-06 18:36:56,806 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '230a1789-a3e4-4dd1-a789-a3660e5439fd': init...
2018-12-06 18:36:56,806 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean '230a1789-a3e4-4dd1-a789-a3660e5439fd': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=230a1789-a3e4-4dd1-a789-a3660e5439fd, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.44.5:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-12-06 18:36:56,916 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:36:56,916 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:36:56,916 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:36:56,916 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling setAutoCommit(false)...
2018-12-06 18:36:56,919 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:37) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BEGIN  TRANSACTION
2018-12-06 18:36:56,919 com.qloudbiz.product.service.impl.ProductTypeServiceImpl [main] (ProductTypeServiceImpl.java:133) DEBUG --> >>>>>>>>>>>>>> service query tree method start
2018-12-06 18:37:01,756 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:37:01,757 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:01,757 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:01,757 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling prepareCall({CALL QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE(?)})...
2018-12-06 18:37:01,787 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:37:01,787 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:01,787 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:37:17,927 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:37:17,928 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:17,928 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:37:17,928 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:17,928 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling commit...
2018-12-06 18:37:17,931 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:46) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>COMMIT TRANSACTION
2018-12-06 18:37:17,931 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:62) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CLOSE CONNECTION
2018-12-06 18:37:17,931 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:17,932 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: close()...
2018-12-06 18:37:47,327 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:40) INFO  --> got app config {"uniqueResourceName":"qloud.saga","maxPoolSize":5,"minPoolSize":5,"testQuery":"select 1","driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666"}
2018-12-06 18:37:47,330 com.qloudbiz.core.dao.DbInit [main] (DbInit.java:58) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:37:47,365 org.flywaydb.core.internal.license.VersionPrinter [main] (Slf4jLog.java:49) INFO  --> Flyway Community Edition 5.2.1 by Boxfuse
2018-12-06 18:37:47,481 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:49) INFO  --> Database: jdbc:mariadb://192.168.44.5:3306/productdb (MySQL 5.5)
2018-12-06 18:37:47,481 org.flywaydb.core.internal.database.DatabaseFactory [main] (Slf4jLog.java:45) DEBUG --> Driver  : MariaDB connector/J 2.3.0
2018-12-06 18:37:47,505 org.flywaydb.core.internal.database.mysql.MySQLDatabase [main] (Slf4jLog.java:45) DEBUG --> Unable to detect whether we are running in a Percona XtraDB Cluster. Assuming not to be.
2018-12-06 18:37:47,505 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> DDL Transactions Supported: false
2018-12-06 18:37:47,513 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Schema: productdb
2018-12-06 18:37:47,517 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classpath resources at 'classpath:db/migration' ...
2018-12-06 18:37:47,518 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Determining location urls for classpath:db/migration using ClassLoader sun.misc.Launcher$AppClassLoader@18b4aac2 ...
2018-12-06 18:37:47,518 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning URL: file:/C:/Users/LCY/git/oep-project/qloudbiz-api-product/target/classes/db/migration
2018-12-06 18:37:47,519 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> JBoss VFS v2 available: false
2018-12-06 18:37:47,521 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning starting at classpath root in filesystem: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\
2018-12-06 18:37:47,522 org.flywaydb.core.internal.scanner.classpath.FileSystemClassPathLocationScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for resources in path: C:\Users\LCY\git\oep-project\qloudbiz-api-product\target\classes\db\migration (db/migration)
2018-12-06 18:37:47,524 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_0__init_product_table.sql
2018-12-06 18:37:47,525 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_2__product_procedures.sql
2018-12-06 18:37:47,526 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_4__init_productline_table.sql
2018-12-06 18:37:47,526 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_5__productline_procedures.sql
2018-12-06 18:37:47,526 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_6__productbrand_procedures.sql
2018-12-06 18:37:47,526 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_7__productbrand_table.sql
2018-12-06 18:37:47,526 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_8__init_producttype_table.sql
2018-12-06 18:37:47,527 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Found resource: db/migration/V1_0_9__producttype_procedures.sql
2018-12-06 18:37:47,527 org.flywaydb.core.internal.scanner.classpath.ClassPathScanner [main] (Slf4jLog.java:45) DEBUG --> Scanning for classes at classpath:db/migration
2018-12-06 18:37:47,533 org.flywaydb.core.internal.callback.SqlScriptCallbackFactory [main] (Slf4jLog.java:45) DEBUG --> Scanning for SQL callbacks ...
2018-12-06 18:37:47,540 org.flywaydb.core.internal.util.FeatureDetector [main] (Slf4jLog.java:45) DEBUG --> Spring Jdbc available: false
2018-12-06 18:37:47,561 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:45) DEBUG --> Validating migrations ...
2018-12-06 18:37:47,572 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_0__init_product_table.sql ...
2018-12-06 18:37:47,577 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: drop table if exists product
2018-12-06 18:37:47,578 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 3: create table if not exists product (
	productId varchar(255) primary key, 
	code  varchar(200) not null,
	name varchar(255)
)
2018-12-06 18:37:47,581 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_2__product_procedures.sql ...
2018-12-06 18:37:47,583 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- insert a product
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`
2018-12-06 18:37:47,590 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 4: CREATE  PROCEDURE `QLOUDFLOW_PRODUCT_INSERT_PROCEDURE`(
	 IN v_productId varchar(255),
     IN v_code varchar(50), 
     IN v_name varchar(255)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO product 
    (
     productId, 
     code,
     name
	) VALUES 
	(
	 v_productId, 
     v_code,
     v_name
	); 
	
	

END
2018-12-06 18:37:47,591 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE
2018-12-06 18:37:47,595 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE PROCEDURE QLOUDFLOW_PRODUCT_LISTALL_PROCEDURE(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_name varchar(255)
)
lable:BEGIN
	IF v_startrow=-1  THEN SELECT COUNT(1) FROM product where name like CONCAT( '%', v_name, '%' ) ;
	ELSE SELECT productId,code,name FROM product where name like CONCAT( '%', v_name, '%' ) LIMIT v_startrow,v_pagesize;
	END IF;
END
2018-12-06 18:37:47,596 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 47: -- query products
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE
2018-12-06 18:37:47,598 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 50: CREATE PROCEDURE QLOUDFLOW_PRODUCT_SINGLE_PROCEDURE(
	IN v_productId int
)
lable:BEGIN
	SELECT productId,code,name FROM product where productId=v_productId;
END
2018-12-06 18:37:47,599 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 59: -- delete QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
2018-12-06 18:37:47,602 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 62: CREATE  PROCEDURE QLOUDFLOW_PRODUCT_DELETE_PROCEDURE(
	 IN v_productId varchar(255),
     OUT V_OUT int
)
lable:BEGIN
   	DELETE FROM product WHERE productId=v_productId;
   	
	SELECT  ROW_COUNT() into V_OUT;

END
2018-12-06 18:37:47,603 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 77: -- update QLOUDFLOW_PRODUCT_DELETE_PROCEDURE
DROP PROCEDURE IF EXISTS QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE
2018-12-06 18:37:47,605 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 80: CREATE PROCEDURE  QLOUDFLOW_PRODUCT_UPDATE_PROCEDURE(
	IN v_productId varchar(64),
	IN v_code varchar(255),
    IN v_name varchar(255),
	OUT V_OUT int
)
label:BEGIN
	UPDATE product set code=v_code,name=v_name where productId=v_productId;

  SELECT  ROW_COUNT() into V_OUT;
END
2018-12-06 18:37:47,608 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_4__init_productline_table.sql ...
2018-12-06 18:37:47,612 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 18: -- ----------------------------
-- Table structure for productLine
-- ----------------------------
DROP TABLE IF EXISTS `productLine`
2018-12-06 18:37:47,615 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 22: CREATE TABLE `productLine` (
  `lineId` varchar(50) NOT NULL,
  `lineCode` varchar(50) NOT NULL,
  `lineName` varchar(100) NOT NULL,
  `parentId` varchar(50) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL,
  `creatorName` varchar(50) NOT NULL,
  `modifyTime` timestamp NULL DEFAULT NULL,
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT NULL,
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`lineId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC
2018-12-06 18:37:47,617 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_5__productline_procedures.sql ...
2018-12-06 18:37:47,619 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`
2018-12-06 18:37:47,621 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_DELETE_PROCEDURE`(
	 IN v_lineId varchar(50)
)
lable:BEGIN
   	DELETE FROM productLine WHERE lineId=v_lineId;
END

2018-12-06 18:37:47,622 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 15: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`
2018-12-06 18:37:47,623 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 20: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INFO_PROCEDURE`(
	IN v_lineId varchar(50)
)
lable:BEGIN
	SELECT * FROM productLine WHERE lineId = v_lineId;
END

2018-12-06 18:37:47,624 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 29: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`
2018-12-06 18:37:47,631 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 34: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_INSERT_PROCEDURE`(
	 IN v_lineId varchar(50),
     IN v_lineCode varchar(50), 
     IN v_lineName varchar(100),
     IN v_parentId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productLine 
    (
     lineId, 
     lineCode,
     lineName,
     parentId,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	 v_lineId, 
     v_lineCode,
     v_lineName,
     v_parentId,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
	

END

2018-12-06 18:37:47,632 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`
2018-12-06 18:37:47,636 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 102: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_LISTALL_PROCEDURE`(
	IN v_startrow int,
	IN v_pagesize int,
	IN v_lineCode varchar(50),
	IN v_lineName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50)
)
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) 
	FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId);
	ELSE
	SELECT * FROM productLine where 
	(v_lineCode is null or lineCode like CONCAT('%',v_lineCode,'%') )
	and (v_lineName is null or lineName like CONCAT('%',v_lineName,'%'))
	and (v_status is null or status = v_status)
	and (v_tenantId is null or tenantId = v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:37:47,637 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`
2018-12-06 18:37:47,644 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 135: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTLINE_UPDATE_PROCEDURE`(
  IN v_lineId varchar(50),
	IN v_lineName varchar(100),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productLine set 
	lineName=v_lineName,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where lineId=v_lineId;
END

2018-12-06 18:37:47,646 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_6__productbrand_procedures.sql ...
2018-12-06 18:37:47,648 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_DELETE_PROCEDURE`
2018-12-06 18:37:47,649 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_DELETE_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
   	DELETE FROM productBrand WHERE brandId=v_brandId;
  
END

2018-12-06 18:37:47,649 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 14: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INFO_PROCEDURE`
2018-12-06 18:37:47,650 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 19: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INFO_PROCEDURE`(IN v_brandId varchar(50))
lable:BEGIN
	SELECT * FROM productBrand WHERE brandId = v_brandId;
END

2018-12-06 18:37:47,651 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 26: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_INSERT_PROCEDURE`
2018-12-06 18:37:47,656 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 31: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_INSERT_PROCEDURE`(IN v_brandId varchar(50),
     IN v_brandCode varchar(50), 
     IN v_brandName varchar(100),
     IN v_brandType varchar(32),
 IN  v_remark varchar(1024) , IN v_sort int(4),
     IN v_status varchar(16),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_ownerCompanyCode varchar(50),
     IN v_tenantId varchar(50))
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productBrand 
    (
     brandId, 
     brandCode,
     brandName,
     brandType,
     remark,
     sort,
     status,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     ownerCompanyCode,
     tenantId
	) VALUES 
	(
	   v_brandId, 
     v_brandCode,
     v_brandName,
     v_brandType,
     v_remark,
     v_sort,
     v_status,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_ownerCompanyCode,
     v_tenantId
	); 
	
END

2018-12-06 18:37:47,657 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 92: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_LISTALL_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_LISTALL_PROCEDURE`
2018-12-06 18:37:47,659 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 97: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_LISTALL_PROCEDURE`(IN v_startrow int,
	IN v_pagesize int,
	IN v_brandCode varchar(50),
  IN v_brandType varchar(32),
	IN v_brandName varchar(100),
	IN v_status varchar(16),
	IN v_tenantId varchar(50))
lable:BEGIN
	IF 
	v_startrow=-1  THEN SELECT COUNT(1) FROM 
  productBrand where 
  (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status=v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId);
	ELSE
	SELECT * FROM productBrand 
	where 
   (v_brandCode is null or brandCode like CONCAT('%',v_brandCode,'%') )
	and (v_brandName is null or brandName like CONCAT('%',v_brandName,'%'))
	and (v_status is null or status =v_status)
  and (v_brandType is null or brandType=v_brandType)
	and (v_tenantId is null or tenantId=v_tenantId)
	LIMIT v_startrow,v_pagesize;
	END IF;
END

2018-12-06 18:37:47,660 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 127: -- ----------------------------
-- Procedure structure for PRODUCTBRAND_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `PRODUCTBRAND_UPDATE_PROCEDURE`
2018-12-06 18:37:47,662 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 132: CREATE DEFINER=`root`@`%` PROCEDURE `PRODUCTBRAND_UPDATE_PROCEDURE`(IN v_brandId varchar(50),
  IN v_brandCode varchar(50),
	IN v_brandName varchar(100),
	IN v_brandType varchar(32),
  IN v_remark varchar(1024),
	IN v_sort int(4),
IN v_status varchar(16),IN v_modifierId VARCHAR(50),IN v_modifierName VARCHAR(50),IN v_modifyTime timestamp,IN v_lastModifyTime timestamp)
label:BEGIN
	UPDATE productBrand set 
  brandCode=v_brandCode,
	brandName=v_brandName,
  brandType=v_brandType,
	remark=v_remark,
	sort=v_sort,
  modifierId=v_modifierId,
  modifierName=v_modifierName,
  modifyTime=v_modifyTime,
  lastModifyTime=v_lastModifyTime,
	status=v_status
	where brandId =v_brandId;
END

2018-12-06 18:37:47,664 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_7__productbrand_table.sql ...
2018-12-06 18:37:47,666 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Table structure for productBrand
-- ----------------------------
DROP TABLE IF EXISTS `productBrand`
2018-12-06 18:37:47,668 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 5: CREATE TABLE `productBrand` (
  `brandId` varchar(50) NOT NULL,
  `brandCode` varchar(50) NOT NULL,
  `brandName` varchar(100) NOT NULL,
  `brandType` varchar(32) DEFAULT NULL,
  `remark` varchar(1024) DEFAULT NULL,
  `sort` int(4) NOT NULL,
  `status` varchar(16) NOT NULL,
  `createdTime` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `creatorId` varchar(50) NOT NULL DEFAULT '1',
  `creatorName` varchar(50) NOT NULL DEFAULT 'admin',
  `modifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `modifierId` varchar(50) DEFAULT NULL,
  `modifierName` varchar(50) DEFAULT NULL,
  `lastModifyTime` timestamp NULL DEFAULT '0000-00-00 00:00:00',
  `ownerCompanyCode` varchar(50) DEFAULT NULL,
  `tenantId` varchar(50) NOT NULL DEFAULT '1',
  PRIMARY KEY (`brandId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
2018-12-06 18:37:47,670 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_8__init_producttype_table.sql ...
2018-12-06 18:37:47,672 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: DROP TABLE IF EXISTS `productType`
2018-12-06 18:37:47,676 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 2: CREATE TABLE `productType` (
  `typeId` varchar(50) NOT NULL COMMENT '产品分类Id',
  `typeCode` varchar(50) NOT NULL COMMENT '产品分类编号',
  `typeName` varchar(100) NOT NULL COMMENT '产品分类中文名称',
  `parentId` varchar(50) DEFAULT NULL COMMENT '产品分类父节点id',
  `isPhysical` tinyint(1) DEFAULT '1' COMMENT '是否物理分类',
  `toTransport` tinyint(1) DEFAULT '1' COMMENT '是否需要运输',
  `prodLineId` varchar(50) DEFAULT NULL COMMENT '所属产品线Id',
  `sort` int(4) NOT NULL COMMENT '排序号',
  `status` varchar(16) NOT NULL COMMENT '状态',
  `remark` varchar(50) DEFAULT NULL COMMENT '备注',
  `createdTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '创建时间',
  `creatorId` varchar(50) NOT NULL COMMENT '创建人ID',
  `creatorName` varchar(50) NOT NULL COMMENT '创建人姓名',
  `modifyTime` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `modifierId` varchar(50) DEFAULT NULL COMMENT '更新人ID',
  `modifierName` varchar(50) DEFAULT NULL COMMENT '更新人姓名',
  `lastModifyTime` timestamp NULL DEFAULT NULL COMMENT '最后更新时间',
  `tenantId` varchar(50) NOT NULL COMMENT '租户ID',
  PRIMARY KEY (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
2018-12-06 18:37:47,678 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Parsing V1_0_9__producttype_procedures.sql ...
2018-12-06 18:37:47,680 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 1: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`
2018-12-06 18:37:47,683 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 6: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INSERT_PROCEDURE`(
	 IN v_typeId varchar(50),
     IN v_typeCode varchar(50), 
     IN v_typeName varchar(100),
     IN v_parentId varchar(50),
     IN v_isPhysical tinyint(1),
     IN v_toTransport tinyint(1),
     IN v_prodLineId varchar(50),
     IN v_sort int(4),
     IN v_status varchar(16),
     IN v_remark varchar(50),
     IN v_createdTime timestamp,
     IN v_creatorId varchar(50),
     IN v_creatorName varchar(50),
     IN v_modifyTime timestamp,
     IN v_modifierId varchar(50),
     IN v_modifierName varchar(50),
     IN v_lastModifyTime timestamp,
     IN v_tenantId varchar(50)
)
lable:BEGIN
    DECLARE tmpCont int default 0;
    DECLARE cont int default 0;
    
    INSERT INTO productType 
    (
     typeId, 
     typeCode,
     typeName,
     parentId,
     isPhysical,
     toTransport,
     prodLineId,
     sort,
     status,
     remark,
     createdTime,
     creatorId,
     creatorName,
     modifyTime,
     modifierId,
     modifierName,
     lastModifyTime,
     tenantId
	) VALUES 
	(
	 v_typeId, 
     v_typeCode,
     v_typeName,
     v_parentId,
     v_isPhysical,
     v_toTransport,
     v_prodLineId,
     v_sort,
     v_status,
     v_remark,
     v_createdTime,
     v_creatorId,
     v_creatorName,
     v_modifyTime,
     v_modifierId,
     v_modifierName,
     v_lastModifyTime,
     v_tenantId
	); 
	
	

END

2018-12-06 18:37:47,684 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 81: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`
2018-12-06 18:37:47,686 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 86: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_UPDATE_PROCEDURE`(
    IN v_typeId varchar(50),
	IN v_typeCode varchar(50),
	IN v_typeName varchar(100),
	IN v_isPhysical tinyint(1),
	IN v_toTransport tinyint(1),
	IN v_parentId varchar(50),
	IN v_sort int(4),
	IN v_status varchar(16),
	IN v_prodLineId varchar(50),
	IN v_tenantId varchar(50),
	IN v_modifierId varchar(50),
	IN v_modifierName varchar(50),
	IN v_modifyTime timestamp,
	IN v_lastModifyTime timestamp
)
label:BEGIN
	UPDATE productType set 
	typeCode=v_typeCode,
	typeName=v_typeName,
	isPhysical=v_isPhysical,
	toTransport=v_toTransport,
	parentId=v_parentId,
	sort=v_sort,
	status=v_status,
	prodLineId=v_prodLineId,
	tenantId=v_tenantId,
	modifierId = v_modifierId,
	modifierName = v_modifierName,
	modifyTime = v_modifyTime,
	lastModifyTime = v_lastModifyTime
	where typeId=v_typeId;
END

2018-12-06 18:37:47,686 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 125: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`
2018-12-06 18:37:47,687 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 130: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_DELETE_PROCEDURE`(
	 IN v_typeId varchar(50)
)
lable:BEGIN
   	DELETE FROM productType WHERE typeId=v_typeId;
END

2018-12-06 18:37:47,687 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 142: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`
2018-12-06 18:37:47,688 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 147: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_INFO_PROCEDURE`(
	IN v_typeId varchar(50)
)
lable:BEGIN
	SELECT * FROM productType WHERE typeId = v_typeId;
END

2018-12-06 18:37:47,688 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 160: -- ----------------------------
-- Procedure structure for QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE
-- ----------------------------
DROP PROCEDURE IF EXISTS `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`
2018-12-06 18:37:47,689 org.flywaydb.core.internal.sqlscript.SqlScript [main] (Slf4jLog.java:45) DEBUG --> Found statement at line 165: CREATE DEFINER=`root`@`%` PROCEDURE `QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE`(
	IN v_typeName varchar(100)
)
lable:BEGIN
	SELECT * FROM productType
	WHERE (v_typeName is null or typeName like CONCAT('%',v_typeName,'%') );
END

2018-12-06 18:37:47,691 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_0__init_product_table.sql (filename: V1_0_0__init_product_table.sql)
2018-12-06 18:37:47,691 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_2__product_procedures.sql (filename: V1_0_2__product_procedures.sql)
2018-12-06 18:37:47,691 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_4__init_productline_table.sql (filename: V1_0_4__init_productline_table.sql)
2018-12-06 18:37:47,691 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_5__productline_procedures.sql (filename: V1_0_5__productline_procedures.sql)
2018-12-06 18:37:47,692 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_6__productbrand_procedures.sql (filename: V1_0_6__productbrand_procedures.sql)
2018-12-06 18:37:47,692 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_7__productbrand_table.sql (filename: V1_0_7__productbrand_table.sql)
2018-12-06 18:37:47,692 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_8__init_producttype_table.sql (filename: V1_0_8__init_producttype_table.sql)
2018-12-06 18:37:47,692 org.flywaydb.core.internal.scanner.Scanner [main] (Slf4jLog.java:45) DEBUG --> Filtering out resource: db/migration/V1_0_9__producttype_procedures.sql (filename: V1_0_9__producttype_procedures.sql)
2018-12-06 18:37:47,726 org.flywaydb.core.internal.command.DbValidate [main] (Slf4jLog.java:49) INFO  --> Successfully validated 8 migrations (execution time 00:00.153s)
2018-12-06 18:37:47,732 org.flywaydb.core.internal.command.DbSchemas [main] (Slf4jLog.java:45) DEBUG --> Schema `productdb` already exists. Skipping schema creation.
2018-12-06 18:37:47,749 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Current version of schema `productdb`: 1.0.9
2018-12-06 18:37:47,752 org.flywaydb.core.internal.command.DbMigrate [main] (Slf4jLog.java:49) INFO  --> Schema `productdb` is up to date. No migration necessary.
2018-12-06 18:37:47,761 org.flywaydb.core.Flyway [main] (Slf4jLog.java:45) DEBUG --> Memory usage: 43 of 184M
2018-12-06 18:37:47,778 com.atomikos.logging.LoggerFactory [main] (Slf4jLogger.java:32) DEBUG --> Using Slf4J for logging.
2018-12-06 18:37:47,778 com.qloudfin.sagas.persistence.jdbc.JdbcClient [main] (JdbcClient.java:72) DEBUG --> db config is {"driver":"org.mariadb.jdbc.MariaDbDataSource","ip":"192.168.44.5","port":3306,"dbname":"productdb","username":"root","password":"666666","testQuery":"select 1","maxPoolSize":5,"minPoolSize":5} 

2018-12-06 18:37:47,997 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:32) DEBUG --> AtomikosDataSoureBean 'ab16bce4-ce19-4803-8bd4-3a89b4d74407': getConnection()...
2018-12-06 18:37:47,997 com.atomikos.jdbc.AbstractDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'ab16bce4-ce19-4803-8bd4-3a89b4d74407': init...
2018-12-06 18:37:47,997 com.atomikos.jdbc.AtomikosDataSourceBean [main] (Slf4jLogger.java:28) INFO  --> AtomikosDataSoureBean 'ab16bce4-ce19-4803-8bd4-3a89b4d74407': initializing with [ xaDataSourceClassName=org.mariadb.jdbc.MariaDbDataSource, uniqueResourceName=ab16bce4-ce19-4803-8bd4-3a89b4d74407, maxPoolSize=5, minPoolSize=5, borrowConnectionTimeout=30, maxIdleTime=60, reapTimeout=0, maintenanceInterval=60, testQuery=select 1, xaProperties=[user=root,password=666666,url=jdbc:mariadb://192.168.44.5:3306/productdb?maxPoolSize=5&autoReconnect=true], loginTimeout=0, maxLifetime=0]
2018-12-06 18:37:48,113 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:48,114 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:37:48,114 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:37:48,114 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling setAutoCommit(false)...
2018-12-06 18:37:48,117 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:37) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BEGIN  TRANSACTION
2018-12-06 18:37:48,117 com.qloudbiz.product.service.impl.ProductTypeServiceImpl [main] (ProductTypeServiceImpl.java:133) DEBUG --> >>>>>>>>>>>>>> service query tree method start
2018-12-06 18:38:01,125 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:38:01,126 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:01,126 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:01,126 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling prepareCall({CALL QLOUDFLOW_PRODUCTTYPE_TREE_PROCEDURE(?)})...
2018-12-06 18:38:01,156 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:38:01,156 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:01,156 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:38:15,866 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: isClosed()...
2018-12-06 18:38:15,867 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:15,867 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling getAutoCommit...
2018-12-06 18:38:15,867 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:15,867 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: calling commit...
2018-12-06 18:38:15,870 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:46) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>COMMIT TRANSACTION
2018-12-06 18:38:15,870 com.qloudbiz.core.factory.ServiceProxyFactory [main] (ServiceProxyFactory.java:62) DEBUG --> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CLOSE CONNECTION
2018-12-06 18:38:15,871 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:24) WARN  --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: WARNING: transaction manager not running?
2018-12-06 18:38:15,871 com.atomikos.jdbc.AtomikosConnectionProxy [main] (Slf4jLogger.java:32) DEBUG --> atomikos connection proxy for org.mariadb.jdbc.MariaDbConnection@38467116: close()...
